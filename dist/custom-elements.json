{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "components/badge.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsBadge",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito.",
              "name": "base"
            }
          ],
          "slots": [
            {
              "description": "O conteúdo do _badge_.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, '[default]')"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante temática do _badge_.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Exibe ícone automático de acordo com a variante, ao invés de permitir conteúdo arbitrário no _badge_.",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "square",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Força o _badge_ a um formato retangular, sem arredondamento de bordas.",
              "attribute": "square",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Efeito pulsante para chamar atenção extra.",
              "attribute": "pulse",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "hasSingleCharacter",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasIcon",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante temática do _badge_.",
              "fieldName": "variant"
            },
            {
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Exibe ícone automático de acordo com a variante, ao invés de permitir conteúdo arbitrário no _badge_.",
              "fieldName": "icon"
            },
            {
              "name": "square",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Força o _badge_ a um formato retangular, sem arredondamento de bordas.",
              "fieldName": "square"
            },
            {
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Efeito pulsante para chamar atenção extra.",
              "fieldName": "pulse"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Distintivos (_badges_) são usados para chamar atenção de forma sutil\r\ne não intrusiva, comumente para exibição de notificações de _status_,\r\nindicação de novo conteúdo ou contagens.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/badge",
          "status": "stable",
          "since": "0.2",
          "dependencies": [
            "cps-icon"
          ],
          "tagName": "cps-badge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsBadge",
            "module": "components/badge.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-badge",
          "declaration": {
            "name": "CpsBadge",
            "module": "components/badge.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsBadge",
          "declaration": {
            "name": "CpsBadge",
            "module": "components/badge.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/button-group.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsButtonGroup",
          "cssParts": [
            {
              "description": "O elemento base que embrulha o grupo.",
              "name": "base"
            }
          ],
          "slots": [
            {
              "description": "Um ou mais elementos `<cps-button>` a exibir dentro do grupo de botões.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "disableRole",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Um rótulo descritivo para o grupo de botões. Este não será exibido na interface, mas será anunciado\r\npor dispositivos de acessibilidade durante a interação com o controle, sendo fortemente recomendado.",
              "attribute": "label"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOver",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Um rótulo descritivo para o grupo de botões. Este não será exibido na interface, mas será anunciado\r\npor dispositivos de acessibilidade durante a interação com o controle, sendo fortemente recomendado.",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Grupos de botões podem ser usados para agrupar botões relacionados em seções.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/button-group",
          "status": "stable",
          "since": "0.1",
          "tagName": "cps-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsButtonGroup",
            "module": "components/button-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-button-group",
          "declaration": {
            "name": "CpsButtonGroup",
            "module": "components/button-group.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsButtonGroup",
          "declaration": {
            "name": "CpsButtonGroup",
            "module": "components/button-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/button.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsButton",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (que pode ser `<button>` ou `<a>`).",
              "name": "base"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `prefix`.",
              "name": "prefix"
            },
            {
              "description": "O elemento que embrulha o conteúdo principal, normalmente o _label_ do botão.",
              "name": "content"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `suffix`.",
              "name": "suffix"
            },
            {
              "description": "O elemento de sinalização de menu, normalmente um `<cps-icon>` com o ícone de circunflexo para baixo.",
              "name": "caret"
            }
          ],
          "slots": [
            {
              "description": "O texto interno do botão.",
              "name": ""
            },
            {
              "description": "Um ícone ou elemento similar antes do conteúdo principal.",
              "name": "prefix"
            },
            {
              "description": "Um ícone ou elemento similar após o conteúdo principal.",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "default": "new FormControlController(this, {\r\n    form: input => {\r\n      // Buttons support a form attribute that points to an arbitrary form, so if this attribute is set we need to query\r\n      // the form from the same root using its id\r\n      if (input.hasAttribute('form')) {\r\n        const doc = input.getRootNode() as Document | ShadowRoot;\r\n        const formId = input.getAttribute('form')!;\r\n        return doc.getElementById(formId) as HTMLFormElement;\r\n      }\r\n\r\n      // Fall back to the closest containing form\r\n      return input.closest('form');\r\n    },\r\n    assumeInteractionOn: ['click']\r\n  })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, '[default]', 'prefix', 'suffix')"
            },
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            },
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "HTMLButtonElement | HTMLLinkElement"
              }
            },
            {
              "kind": "field",
              "name": "isFocused",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'default' | 'accent' | 'transparent'"
              },
              "default": "'default'",
              "description": "A variante visual para apresentação do botão.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "caret",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta um sinalizador de menu ao final do botão. Usado para indicar que o botão dispara um menu de contexto ou algum comportamento similar.",
              "attribute": "caret",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "waiting",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta o botão em estado de carregamento.",
              "attribute": "waiting",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos do botão, com o padrão sendo bordas arredondas em `4px`.",
              "attribute": "rounded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit' | 'reset'"
              },
              "default": "'button'",
              "description": "O tipo do botão. Observe que o valor padrão é `button` ao invés de `submit`, o oposto de como um\r\n`<button>` nativo se comporta. Quando `submit`, o botão auto-submete o `<form>` em que estiver contido.",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do botão, submetido em par _name_/_value_ com os dados do formulário,\r\nsomente se este botão for o submissor. Ignorado quando `href` está presente.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do botão, submetido em par _name_/_value_ com os dados do formulário,\r\nsomente se este botão for o submissor. Ignorado quando `href` está presente.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Quando definido, o botão será renderizado como um elemento `<a>` com este `href` definido, ao invés de um elemento `<button>`.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "'_blank' | '_parent' | '_self' | '_top'"
              },
              "description": "Informa o navegador qual o alvo de abertura do _link_. Usado somente se `href` estiver presente.",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "'noreferrer noopener'",
              "description": "Quando usando `href`, este atributo irá mapear o valor do atributo `rel` subjacente com o valor\r\npadrão `noreferrer noopener`, por questões de segurança. No entanto, se você estiver usando `target`\r\npara apontar para uma guia/janela específica, isso impedirá que ele funcione corretamente.\r\nPara este cenário específico, defina como vazio ou altere o valor de `rel` para outro valor.",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "description": "Informa o navegador para baixar o arquivo vinculado, com o nome definido aqui. Usado somente se `href` estiver presente.",
              "attribute": "download"
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "description": "O formulário \"dono\" deste botão. Se não informado, o formulário mais próximo na hierarquia\r\naté este botão será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "attribute": "form"
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "description": "Usado para sobrescrever o atributo `action` do formulário \"dono\" deste botão.",
              "attribute": "formaction"
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'"
              },
              "description": "Usado para sobrescrever o atributo `enctype` do formulário \"dono\" deste botão.",
              "attribute": "formenctype"
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "'post' | 'get'"
              },
              "description": "Usado para sobrescrever o atributo `method` do formulário \"dono\" deste botão.",
              "attribute": "formmethod"
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "description": "Usado para sobrescrever o atributo `novalidate` do formulário \"dono\" deste botão.",
              "attribute": "formnovalidate"
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "'_self' | '_blank' | '_parent' | '_top' | string"
              },
              "description": "Usado para sobrescrever o atributo `target` do formulário \"dono\" deste botão.",
              "attribute": "formtarget"
            },
            {
              "kind": "field",
              "name": "validity",
              "description": "Obtém o objeto de estado de validade do botão."
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "description": "Obtém a mensagem de validação do botão."
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleHostClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isButton",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "isLink",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "click",
              "description": "Simula um _click_ no botão."
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ],
              "description": "Coloca o foco no botão."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Remove o foco do botão."
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "description": "Verifica a validade em um formulário, sem exibir uma mensagem de validação. Retorna `true` quando válido, e `false` quando inválido."
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              },
              "description": "Obtém o formulário associado com este componente, se algum estiver."
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "description": "Verifica a validade em um formulário, e exibe as mensagem de validação do navegador caso o resultado seja inválido."
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Define uma mensagem de validação personalizada. Passar uma `string` vazia como argumento restaura a validade do elemento."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o botão perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando o botão obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            },
            {
              "description": "Emitido quando o elemento de formulário foi checado sobre sua validade, e suas condições não foram satisfeitas.",
              "name": "cps-invalid",
              "reactName": "onCpsInvalid"
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "title"
            },
            {
              "name": "variant",
              "type": {
                "text": "'default' | 'accent' | 'transparent'"
              },
              "default": "'default'",
              "description": "A variante visual para apresentação do botão.",
              "fieldName": "variant"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão.",
              "fieldName": "size"
            },
            {
              "name": "caret",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta um sinalizador de menu ao final do botão. Usado para indicar que o botão dispara um menu de contexto ou algum comportamento similar.",
              "fieldName": "caret"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão.",
              "fieldName": "disabled"
            },
            {
              "name": "waiting",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta o botão em estado de carregamento.",
              "fieldName": "waiting"
            },
            {
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos do botão, com o padrão sendo bordas arredondas em `4px`.",
              "fieldName": "rounded"
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit' | 'reset'"
              },
              "default": "'button'",
              "description": "O tipo do botão. Observe que o valor padrão é `button` ao invés de `submit`, o oposto de como um\r\n`<button>` nativo se comporta. Quando `submit`, o botão auto-submete o `<form>` em que estiver contido.",
              "fieldName": "type"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do botão, submetido em par _name_/_value_ com os dados do formulário,\r\nsomente se este botão for o submissor. Ignorado quando `href` está presente.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do botão, submetido em par _name_/_value_ com os dados do formulário,\r\nsomente se este botão for o submissor. Ignorado quando `href` está presente.",
              "fieldName": "value"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Quando definido, o botão será renderizado como um elemento `<a>` com este `href` definido, ao invés de um elemento `<button>`.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "type": {
                "text": "'_blank' | '_parent' | '_self' | '_top'"
              },
              "description": "Informa o navegador qual o alvo de abertura do _link_. Usado somente se `href` estiver presente.",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "'noreferrer noopener'",
              "description": "Quando usando `href`, este atributo irá mapear o valor do atributo `rel` subjacente com o valor\r\npadrão `noreferrer noopener`, por questões de segurança. No entanto, se você estiver usando `target`\r\npara apontar para uma guia/janela específica, isso impedirá que ele funcione corretamente.\r\nPara este cenário específico, defina como vazio ou altere o valor de `rel` para outro valor.",
              "fieldName": "rel"
            },
            {
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "description": "Informa o navegador para baixar o arquivo vinculado, com o nome definido aqui. Usado somente se `href` estiver presente.",
              "fieldName": "download"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "description": "O formulário \"dono\" deste botão. Se não informado, o formulário mais próximo na hierarquia\r\naté este botão será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "fieldName": "form"
            },
            {
              "name": "formaction",
              "type": {
                "text": "string"
              },
              "description": "Usado para sobrescrever o atributo `action` do formulário \"dono\" deste botão.",
              "fieldName": "formAction"
            },
            {
              "name": "formenctype",
              "type": {
                "text": "'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'"
              },
              "description": "Usado para sobrescrever o atributo `enctype` do formulário \"dono\" deste botão.",
              "fieldName": "formEnctype"
            },
            {
              "name": "formmethod",
              "type": {
                "text": "'post' | 'get'"
              },
              "description": "Usado para sobrescrever o atributo `method` do formulário \"dono\" deste botão.",
              "fieldName": "formMethod"
            },
            {
              "name": "formnovalidate",
              "type": {
                "text": "boolean"
              },
              "description": "Usado para sobrescrever o atributo `novalidate` do formulário \"dono\" deste botão.",
              "fieldName": "formNoValidate"
            },
            {
              "name": "formtarget",
              "type": {
                "text": "'_self' | '_blank' | '_parent' | '_top' | string"
              },
              "description": "Usado para sobrescrever o atributo `target` do formulário \"dono\" deste botão.",
              "fieldName": "formTarget"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Botões representam ações que estão disponíveis ao usuário.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/button",
          "status": "stable",
          "since": "0.1",
          "dependencies": [
            "cps-icon",
            "cps-spinner"
          ],
          "tagName": "cps-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsButton",
            "module": "components/button.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-button",
          "declaration": {
            "name": "CpsButton",
            "module": "components/button.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsButton",
          "declaration": {
            "name": "CpsButton",
            "module": "components/button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/checkbox.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsCheckbox",
          "cssParts": [
            {
              "description": "O elemento base que embrulha o `<input>` e eventuais elementos de apoio para sua renderização.",
              "name": "base"
            },
            {
              "description": "O elemento quadrado que embrulha o estado checagem do campo.",
              "name": "control"
            },
            {
              "description": "Obtém para estilização o elemento `control`, somente quando o campo está marcado.",
              "name": "control--checked"
            },
            {
              "description": "Obtém para estilização o elemento `control`, somente quando o campo está em estado indeterminado.",
              "name": "control--indeterminate"
            },
            {
              "description": "O ícone de estado checado, um elemento `<cps-icon>`.",
              "name": "checked-icon"
            },
            {
              "description": "O ícone de estado indeterminado, um elemento `<cps-icon>`.",
              "name": "indeterminate-icon"
            },
            {
              "description": "O elemento que embrulha o rótulo do campo, um elemento `<label>`.",
              "name": "label"
            }
          ],
          "slots": [
            {
              "description": "Rótulo informativo do campo. Caso a injeção de conteúdos complexos não seja necessária, alternativamente utilize apenas o atributo `label`.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "default": "new FormControlController(this, {\r\n    value: (control: CpsCheckbox) => (control.checked ? control.value || 'on' : undefined),\r\n    defaultValue: (control: CpsCheckbox) => control.defaultChecked,\r\n    setValue: (control: CpsCheckbox, checked: boolean) => (control.checked = checked)\r\n  })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this)"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "generatedId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o campo.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina o estado de checagem do campo, ou seja, quando presente, o campo encontra-se marcado.",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta o campo em estado indeterminado.\r\nIsso é geralmente aplicado a caixas de seleção que representam o cabeçalho\r\nde um comportamento \"Selecionar todos/nenhum\", quando as caixas de seleção\r\nassociadas podem ter mistura de estados marcados e desmarcados.",
              "attribute": "indeterminate",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "defaultChecked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "O valor padrão do controle de formulário. Usado principalmente para redefinir o campo."
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O formulário \"dono\" deste controle de formulário. Se não informado, o formulário mais próximo na hierarquia\r\naté este elemento será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "attribute": "form",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo como sendo de preenchimento obrigatório.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "validity",
              "description": "Obtém o objeto de estado de validade do campo."
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "description": "Obtém a mensagem de validação do campo."
            },
            {
              "kind": "method",
              "name": "handleIdChange"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "handleStateChange"
            },
            {
              "kind": "method",
              "name": "click",
              "description": "Simula um _click_ no campo."
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ],
              "description": "Coloca o foco no campo."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Remove o foco do campo."
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "description": "Verifica a validade em um formulário, sem exibir uma mensagem de validação. Retorna `true` quando válido, e `false` quando inválido."
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              },
              "description": "Obtém o formulário associado com este componente, se algum estiver."
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "description": "Verifica a validade em um formulário, e exibe as mensagem de validação do navegador caso o resultado seja inválido."
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Define uma mensagem de validação personalizada. Passar uma `string` vazia como argumento restaura a validade do elemento."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o controle perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando a alteração do valor do controle é confirmada pelo usuário.",
              "name": "cps-change",
              "reactName": "onCpsChange"
            },
            {
              "description": "Emitido quando o controle obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            },
            {
              "description": "Emitido quando o controle recebe entrada de dados.",
              "name": "cps-input",
              "reactName": "onCpsInput"
            },
            {
              "description": "Emitido quando o elemento de formulário foi checado sobre sua validade, e suas condições não foram satisfeitas.",
              "name": "cps-invalid",
              "reactName": "onCpsInvalid"
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "title"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "fieldName": "id"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "value"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "fieldName": "label"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo.",
              "fieldName": "size"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o campo.",
              "fieldName": "disabled"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina o estado de checagem do campo, ou seja, quando presente, o campo encontra-se marcado.",
              "fieldName": "checked"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta o campo em estado indeterminado.\r\nIsso é geralmente aplicado a caixas de seleção que representam o cabeçalho\r\nde um comportamento \"Selecionar todos/nenhum\", quando as caixas de seleção\r\nassociadas podem ter mistura de estados marcados e desmarcados.",
              "fieldName": "indeterminate"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O formulário \"dono\" deste controle de formulário. Se não informado, o formulário mais próximo na hierarquia\r\naté este elemento será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "fieldName": "form"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo como sendo de preenchimento obrigatório.",
              "fieldName": "required"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Caixas de seleção (_checkboxes_) permitem alternar entre estados marcado ou desmarcado.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/checkbox",
          "status": "stable",
          "since": "0.4",
          "dependencies": [
            "cps-icon"
          ],
          "tagName": "cps-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsCheckbox",
            "module": "components/checkbox.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-checkbox",
          "declaration": {
            "name": "CpsCheckbox",
            "module": "components/checkbox.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsCheckbox",
          "declaration": {
            "name": "CpsCheckbox",
            "module": "components/checkbox.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/chip.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsChip",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (um `<span>`).",
              "name": "base"
            },
            {
              "description": "O `<slot>` de conteúdo interno do _chip_.",
              "name": "content"
            },
            {
              "description": "O botão de remoção do _chip_ (um `<cps-icon-button>`).",
              "name": "remove-button"
            },
            {
              "description": "A parte `base` re-exportada do botão de remoção.",
              "name": "remove-button__base"
            },
            {
              "description": "A parte `icon` re-exportada do botão de remoção.",
              "name": "remove-button__icon"
            }
          ],
          "slots": [
            {
              "description": "O conteúdo do _chip_.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante visual para apresentação do _chip_.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do _chip_.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Marca o _chip_ como removível, exibindo-se um botão de remoção junto ao conteúdo interno.",
              "attribute": "removable"
            },
            {
              "kind": "method",
              "name": "handleRemoveClick",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emitido quando o botão de remoção do _chip_ `removable` é acionado.",
              "name": "cps-remove",
              "reactName": "onCpsRemove"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante visual para apresentação do _chip_.",
              "fieldName": "variant"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do _chip_.",
              "fieldName": "size"
            },
            {
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Marca o _chip_ como removível, exibindo-se um botão de remoção junto ao conteúdo interno.",
              "fieldName": "removable"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "_Chips_ são usados como etiquetas para organizar coisas ou para indicar uma seleção.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/tag",
          "status": "stable",
          "since": "0.2",
          "dependencies": [
            "cps-icon-button"
          ],
          "tagName": "cps-chip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsChip",
            "module": "components/chip.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-chip",
          "declaration": {
            "name": "CpsChip",
            "module": "components/chip.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsChip",
          "declaration": {
            "name": "CpsChip",
            "module": "components/chip.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon-button.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsIconButton",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (que pode ser `<button>` ou `<a>`).",
              "name": "base"
            },
            {
              "description": "O ícone do botão (um `<cps-icon>`).",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "HTMLButtonElement | HTMLLinkElement"
              }
            },
            {
              "kind": "field",
              "name": "isFocused",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Descrição alternativa para ferramentas de acessibilidade. Não omita este atributo,\r\npois botões são elementos de interação e, desta forma, precisam ser lidos apropriadamente\r\npor ferramentas de acessibilidade.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome do ícone a renderizar. Os nomes disponíveis dependem da biblioteca de ícones que está sendo utilizada.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "library",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome da biblioteca previamente registrada, a ser utilizada para carregar este ícone,\r\natravés de seu `name`. Se omitido, a biblioteca `default` é utilizada.",
              "attribute": "library"
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "URL de um arquivo SVG externo a carregar como ícone. Tenha certeza de confiar no conteúdo do arquivo que está\r\nincorporando, uma vez que seu código interno será executado pelo navegador, o que pode proporcionar ataques XSS\r\nse for carregado um arquivo malicioso.",
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Quando definido, o botão será renderizado como um elemento `<a>` com este `href` definido, ao invés de um elemento `<button>`.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "'_blank' | '_parent' | '_self' | '_top'"
              },
              "description": "Informa o navegador qual o alvo de abertura do _link_. Usado somente se `href` estiver presente.",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "'noreferrer noopener'",
              "description": "Quando usando `href`, este atributo irá mapear o valor do atributo `rel` subjacente com o valor\r\npadrão `noreferrer noopener`, por questões de segurança. No entanto, se você estiver usando `target`\r\npara apontar para uma guia/janela específica, isso impedirá que ele funcione corretamente.\r\nPara este cenário específico, defina como vazio ou altere o valor de `rel` para outro valor.",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "description": "Informa o navegador para baixar o arquivo vinculado, com o nome definido aqui. Usado somente se `href` estiver presente.",
              "attribute": "download"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "click",
              "description": "Simula um _click_ no botão."
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ],
              "description": "Coloca o foco no botão."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Remove o foco do botão."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o botão perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando o botão obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão.",
              "fieldName": "size"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Descrição alternativa para ferramentas de acessibilidade. Não omita este atributo,\r\npois botões são elementos de interação e, desta forma, precisam ser lidos apropriadamente\r\npor ferramentas de acessibilidade.",
              "fieldName": "label"
            },
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome do ícone a renderizar. Os nomes disponíveis dependem da biblioteca de ícones que está sendo utilizada.",
              "fieldName": "name"
            },
            {
              "name": "library",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome da biblioteca previamente registrada, a ser utilizada para carregar este ícone,\r\natravés de seu `name`. Se omitido, a biblioteca `default` é utilizada.",
              "fieldName": "library"
            },
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "URL de um arquivo SVG externo a carregar como ícone. Tenha certeza de confiar no conteúdo do arquivo que está\r\nincorporando, uma vez que seu código interno será executado pelo navegador, o que pode proporcionar ataques XSS\r\nse for carregado um arquivo malicioso.",
              "fieldName": "src"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Quando definido, o botão será renderizado como um elemento `<a>` com este `href` definido, ao invés de um elemento `<button>`.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "type": {
                "text": "'_blank' | '_parent' | '_self' | '_top'"
              },
              "description": "Informa o navegador qual o alvo de abertura do _link_. Usado somente se `href` estiver presente.",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "'noreferrer noopener'",
              "description": "Quando usando `href`, este atributo irá mapear o valor do atributo `rel` subjacente com o valor\r\npadrão `noreferrer noopener`, por questões de segurança. No entanto, se você estiver usando `target`\r\npara apontar para uma guia/janela específica, isso impedirá que ele funcione corretamente.\r\nPara este cenário específico, defina como vazio ou altere o valor de `rel` para outro valor.",
              "fieldName": "rel"
            },
            {
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "description": "Informa o navegador para baixar o arquivo vinculado, com o nome definido aqui. Usado somente se `href` estiver presente.",
              "fieldName": "download"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Botões de ícone são simples, apenas um ícone dentro,\r\nnormalmente para uso dentro de outros componentes.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/icon-button",
          "status": "stable",
          "since": "0.2",
          "dependencies": [
            "cps-icon"
          ],
          "tagName": "cps-icon-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsIconButton",
            "module": "components/icon-button.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-icon-button",
          "declaration": {
            "name": "CpsIconButton",
            "module": "components/icon-button.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsIconButton",
          "declaration": {
            "name": "CpsIconButton",
            "module": "components/icon-button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsIcon",
          "cssParts": [
            {
              "description": "O elemento SVG renderizado.",
              "name": "svg"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "svg",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome do ícone a renderizar. Os nomes disponíveis dependem da biblioteca de ícones que está sendo utilizada.",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "URL de um arquivo SVG externo a carregar como ícone. Tenha certeza de confiar no conteúdo do arquivo que está\r\nincorporando, uma vez que seu código interno será executado pelo navegador, o que pode proporcionar ataques XSS\r\nse for carregado um arquivo malicioso.",
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Descrição alternativa para ferramentas de acessibilidade.\r\nSe omitido, será um ícone puramente visual, ignorado por tecnologias assistivas.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "library",
              "type": {
                "text": "string"
              },
              "default": "'default'",
              "description": "Nome da biblioteca previamente registrada, a ser utilizada para carregar este ícone,\r\natravés de seu `name`. Se omitido, a biblioteca `default` é utilizada.",
              "attribute": "library",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "getUrl",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleLabelChange"
            },
            {
              "kind": "method",
              "name": "setIcon"
            }
          ],
          "events": [
            {
              "description": "Emitido quando o ícone foi carregado.",
              "name": "cps-load",
              "reactName": "onCpsLoad"
            },
            {
              "description": "Emitido quando o ícone falha para carregar devido a um erro.",
              "name": "cps-error",
              "reactName": "onCpsError"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome do ícone a renderizar. Os nomes disponíveis dependem da biblioteca de ícones que está sendo utilizada.",
              "fieldName": "name"
            },
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "URL de um arquivo SVG externo a carregar como ícone. Tenha certeza de confiar no conteúdo do arquivo que está\r\nincorporando, uma vez que seu código interno será executado pelo navegador, o que pode proporcionar ataques XSS\r\nse for carregado um arquivo malicioso.",
              "fieldName": "src"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Descrição alternativa para ferramentas de acessibilidade.\r\nSe omitido, será um ícone puramente visual, ignorado por tecnologias assistivas.",
              "fieldName": "label"
            },
            {
              "name": "library",
              "type": {
                "text": "string"
              },
              "default": "'default'",
              "description": "Nome da biblioteca previamente registrada, a ser utilizada para carregar este ícone,\r\natravés de seu `name`. Se omitido, a biblioteca `default` é utilizada.",
              "fieldName": "library"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Ícones são símbolos gráficos para representação de ações ou informações em uma interface.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/icon",
          "status": "stable",
          "since": "0.1",
          "tagName": "cps-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsIcon",
            "module": "components/icon.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-icon",
          "declaration": {
            "name": "CpsIcon",
            "module": "components/icon.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsIcon",
          "declaration": {
            "name": "CpsIcon",
            "module": "components/icon.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/include.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsInclude",
          "members": [
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string"
              },
              "description": "A localização do arquivo HTML a ser incluído. Tenha certeza de que pode confiar no conteúdo\r\nque você está incluindo, já que será executado como código no navegador após o carregamento,\r\no que implica em possíveis ataques XSS.",
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "'cors' | 'no-cors' | 'same-origin'"
              },
              "default": "'cors'",
              "description": "O modo _cross origin_ a ser utilizado para o carregamento do arquivo.",
              "attribute": "mode"
            },
            {
              "kind": "field",
              "name": "allowScripts",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Permite que _scripts_ incluídos no HTML importado sejam executados. Tenha certeza de que pode\r\nconfiar no conteúdo que você está incluindo, já que será executado como código no navegador\r\napós o carregamento, o que implica em possíveis ataques XSS.",
              "attribute": "allow-scripts"
            },
            {
              "kind": "method",
              "name": "executeScript",
              "privacy": "private",
              "parameters": [
                {
                  "name": "script",
                  "type": {
                    "text": "HTMLScriptElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSrcChange"
            }
          ],
          "events": [
            {
              "description": "Emitido quando o arquivo incluído foi carregado.",
              "name": "cps-load",
              "reactName": "onCpsLoad"
            },
            {
              "type": {
                "text": "{ status: number }"
              },
              "description": "Emitido quando o arquivo incluído falha durante o carregamento.",
              "name": "cps-error",
              "reactName": "onCpsError"
            }
          ],
          "attributes": [
            {
              "name": "src",
              "type": {
                "text": "string"
              },
              "description": "A localização do arquivo HTML a ser incluído. Tenha certeza de que pode confiar no conteúdo\r\nque você está incluindo, já que será executado como código no navegador após o carregamento,\r\no que implica em possíveis ataques XSS.",
              "fieldName": "src"
            },
            {
              "name": "mode",
              "type": {
                "text": "'cors' | 'no-cors' | 'same-origin'"
              },
              "default": "'cors'",
              "description": "O modo _cross origin_ a ser utilizado para o carregamento do arquivo.",
              "fieldName": "mode"
            },
            {
              "name": "allow-scripts",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Permite que _scripts_ incluídos no HTML importado sejam executados. Tenha certeza de que pode\r\nconfiar no conteúdo que você está incluindo, já que será executado como código no navegador\r\napós o carregamento, o que implica em possíveis ataques XSS.",
              "fieldName": "allowScripts"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Possibilita a inclusão de arquivos HTML externos diretamente no conteúdo da página.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/utilitários/include",
          "status": "stable",
          "since": "0.1",
          "tagName": "cps-include",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsInclude",
            "module": "components/include.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-include",
          "declaration": {
            "name": "CpsInclude",
            "module": "components/include.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsInclude",
          "declaration": {
            "name": "CpsInclude",
            "module": "components/include.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/input.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsInput",
          "cssParts": [
            {
              "description": "O agrupamento de controle de formulário que engloba todos os elementos, como rótulo, caixa de entrada, e texto de apoio.",
              "name": "form-control"
            },
            {
              "description": "Elemento que embrulha o rótulo do controle de formulário.",
              "name": "form-control-label"
            },
            {
              "description": "Elemento que embrulha o campo do controle de formulário.",
              "name": "form-control-input"
            },
            {
              "description": "Elemento que embrulha o texto de apoio do controle de formulário.",
              "name": "form-control-help-text"
            },
            {
              "description": "O elemento base que embrulha o `<input>` e eventuais prefixo e sufixo.",
              "name": "base"
            },
            {
              "description": "O controle `<input>` interno propriamente dito.",
              "name": "input"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `prefix`.",
              "name": "prefix"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `suffix`.",
              "name": "suffix"
            },
            {
              "description": "O botão de limpar o campo (caso `clearable` esteja em uso).",
              "name": "clear-button"
            },
            {
              "description": "A parte `base` re-exportada do botão de limpar.",
              "name": "clear-button__base"
            },
            {
              "description": "A parte `icon` re-exportada do botão de limpar.",
              "name": "clear-button__icon"
            },
            {
              "description": "O botão de alternar visibilidade de senha (caso `password-toggle` esteja em uso).",
              "name": "password-toggle-button"
            },
            {
              "description": "A parte `base` re-exportada do botão de visibilidade de senha.",
              "name": "password-toggle-button__base"
            },
            {
              "description": "A parte `icon` re-exportada do botão de visibilidade de senha.",
              "name": "password-toggle-button__icon"
            }
          ],
          "slots": [
            {
              "description": "Rótulo informativo do campo. Caso a injeção de conteúdos complexos não seja necessária, alternativamente utilize apenas o atributo `label`.",
              "name": "label"
            },
            {
              "description": "Um ícone ou elemento similar antes do conteúdo principal.",
              "name": "prefix"
            },
            {
              "description": "Um ícone ou elemento similar após o conteúdo principal.",
              "name": "suffix"
            },
            {
              "description": "Texto de apoio para auxílio ao preenchimento do campo. Caso a injeção de conteúdos complexos não seja necessária, alternativamente utilize apenas o atributo `help-text`.",
              "name": "help-text"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "default": "new FormControlController(this, {\r\n    assumeInteractionOn: ['cps-blur', 'cps-input']\r\n  })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, 'help-text', 'label')"
            },
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "generatedId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'date' | 'datetime-local' | 'email' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'time' | 'url'"
              },
              "default": "'text'",
              "description": "O tipo do campo. Funciona da mesma forma que um elemento `<input>` nativo,\r\nmas apenas um subconjunto de tipos é suportado. O padrão é `text`.",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor padrão do controle de formulário. Usado principalmente para redefinir o campo."
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "helpText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O texto de apoio do campo. Se você precisar injetar HTML, use o _slot_ `help-text` em vez disso.",
              "attribute": "help-text"
            },
            {
              "kind": "field",
              "name": "clearable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adiciona um botão de limpar exibido quando o campo não estiver vazio.",
              "attribute": "clearable"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o campo.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Texto de espaço reservado para exibir uma dica quando o campo estiver vazio.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo somente leitura.",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "passwordToggle",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adiciona um botão de alternância de visibilidade de senha. Aplicável somente se `type` for `password`.",
              "attribute": "password-toggle"
            },
            {
              "kind": "field",
              "name": "passwordVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina se uma senha em preenchimento está visível como texto plano neste momento. Aplicável somente se `type` for `password`.",
              "attribute": "password-visible"
            },
            {
              "kind": "field",
              "name": "noSpinButtons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Força ocultar os botões de incremento/decremento nativos do navegador para entradas numéricas. Aplicável somente se `type` for `number`.",
              "attribute": "no-spin-buttons"
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O formulário \"dono\" deste controle de formulário. Se não informado, o formulário mais próximo na hierarquia\r\naté este elemento será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "attribute": "form",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo como sendo de preenchimento obrigatório.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "description": "Uma expressão regular para validar a entrada do campo.",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "minlength",
              "type": {
                "text": "number"
              },
              "description": "O tamanho mínimo de caracteres que serão considerados válidos.",
              "attribute": "minlength"
            },
            {
              "kind": "field",
              "name": "maxlength",
              "type": {
                "text": "number"
              },
              "description": "O tamanho máximo de caracteres que serão considerados válidos.",
              "attribute": "maxlength"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number | string"
              },
              "description": "O valor mínimo que será considerado válido. Aplicável somente se `type` for `date` ou `number`.",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number | string"
              },
              "description": "O valor máximo que será considerado válido. Aplicável somente se `type` for `date` ou `number`.",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number | 'any'"
              },
              "description": "Especifica a granularidade que o valor deve obedecer, ou o valor especial `any` que significa que nenhum passo é\r\nimplicado, permitindo qualquer valor numérico. Aplicável somente se `type` for `date` ou `number`.",
              "attribute": "step"
            },
            {
              "kind": "field",
              "name": "autocapitalize",
              "type": {
                "text": "'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'"
              },
              "description": "Controla se e como a entrada de texto é capitalizada enquanto inserida pelo usuário.",
              "attribute": "autocapitalize"
            },
            {
              "kind": "field",
              "name": "autocorrect",
              "type": {
                "text": "'off' | 'on'"
              },
              "description": "Indica se o recurso de correção automática do navegador deve ser utilizado.",
              "attribute": "autocorrect"
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "description": "Especifica quais permissões o navegador tem para fornecer assistência no preenchimento dos valores do campo.\r\nConsulte\r\n[esta documentação no MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) para a lista de valores disponíveis.",
              "attribute": "autocomplete"
            },
            {
              "kind": "field",
              "name": "autofocus",
              "type": {
                "text": "boolean"
              },
              "description": "Indica que o campo deve receber foco assim que a página for carregada.",
              "attribute": "autofocus"
            },
            {
              "kind": "field",
              "name": "enterkeyhint",
              "type": {
                "text": "'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'"
              },
              "description": "Utilizado para definir a aparência e o comportamento da tela `Enter` em teclados virtuais.",
              "attribute": "enterkeyhint"
            },
            {
              "kind": "field",
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Habilita correção ortográfica no campo.",
              "attribute": "spellcheck"
            },
            {
              "kind": "field",
              "name": "inputmode",
              "type": {
                "text": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'"
              },
              "description": "Informa o navegador qual o tipo de dados esperado para ser inserido pelo usuário. Isso permite que o navegador\r\napresente o teclado virtual apropriado para o tipo de dados em dispositivos móveis.",
              "attribute": "inputmode"
            },
            {
              "kind": "field",
              "name": "valueAsDate",
              "description": "Obtém ou define o valor atual como um objeto `Date`. Retorna `null` se o valor não puder ser convertido."
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "description": "Obtém ou define o valor atual como um número. Retorna `NaN` se o valor não puder ser convertido."
            },
            {
              "kind": "field",
              "name": "validity",
              "description": "Obtém o objeto de estado de validade do campo."
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "description": "Obtém a mensagem de validação do campo."
            },
            {
              "kind": "method",
              "name": "handleIdChange"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClearClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBaseClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePasswordToggle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "handleStepChange"
            },
            {
              "kind": "method",
              "name": "handleValueChange"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ],
              "description": "Coloca o foco no campo."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Remove o foco do campo."
            },
            {
              "kind": "method",
              "name": "select",
              "description": "Seleciona todo o texto existente no campo."
            },
            {
              "kind": "method",
              "name": "setSelectionRange",
              "parameters": [
                {
                  "name": "selectionStart",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectionEnd",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectionDirection",
                  "default": "'none'",
                  "type": {
                    "text": "'forward' | 'backward' | 'none'"
                  }
                }
              ],
              "description": "Define as posições de início e término da seleção de texto do campo (índices baseados em `0`)."
            },
            {
              "kind": "method",
              "name": "setRangeText",
              "parameters": [
                {
                  "name": "replacement",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "start",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "end",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectMode",
                  "optional": true,
                  "type": {
                    "text": "'select' | 'start' | 'end' | 'preserve'"
                  }
                }
              ],
              "description": "Atualiza um intervalo de texto do campo com o novo valor informado (índices baseados em `0`)."
            },
            {
              "kind": "method",
              "name": "showPicker",
              "description": "Exibe o menu seletor de opções nativo do navegador, de acordo com o `type` do campo (funciona apenas se o navegador suportar um menu seletor para o tipo de entrada em questão)."
            },
            {
              "kind": "method",
              "name": "stepUp",
              "description": "Incrementa o valor de um campo numérico pelo valor do atributo `step` (somente se o `type` definido for `number`)."
            },
            {
              "kind": "method",
              "name": "stepDown",
              "description": "Decrementa o valor de um campo numérico pelo valor do atributo `step` (somente se o `type` definido for `number`)."
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "description": "Verifica a validade em um formulário, sem exibir uma mensagem de validação. Retorna `true` quando válido, e `false` quando inválido."
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              },
              "description": "Obtém o formulário associado com este componente, se algum estiver."
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "description": "Verifica a validade em um formulário, e exibe as mensagem de validação do navegador caso o resultado seja inválido."
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Define uma mensagem de validação personalizada. Passar uma `string` vazia como argumento restaura a validade do elemento."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o controle perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando a alteração do valor do controle é confirmada pelo usuário.",
              "name": "cps-change",
              "reactName": "onCpsChange"
            },
            {
              "description": "Emitido quando o botão de limpar é ativado (caso `clearable` esteja em uso).",
              "name": "cps-clear",
              "reactName": "onCpsClear"
            },
            {
              "description": "Emitido quando o controle obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            },
            {
              "description": "Emitido quando o controle recebe entrada de dados.",
              "name": "cps-input",
              "reactName": "onCpsInput"
            },
            {
              "description": "Emitido quando o elemento de formulário foi checado sobre sua validade, e suas condições não foram satisfeitas.",
              "name": "cps-invalid",
              "reactName": "onCpsInvalid"
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "title"
            },
            {
              "name": "type",
              "type": {
                "text": "'date' | 'datetime-local' | 'email' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'time' | 'url'"
              },
              "default": "'text'",
              "description": "O tipo do campo. Funciona da mesma forma que um elemento `<input>` nativo,\r\nmas apenas um subconjunto de tipos é suportado. O padrão é `text`.",
              "fieldName": "type"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "fieldName": "id"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "value"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo.",
              "fieldName": "size"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "fieldName": "label"
            },
            {
              "name": "help-text",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O texto de apoio do campo. Se você precisar injetar HTML, use o _slot_ `help-text` em vez disso.",
              "fieldName": "helpText"
            },
            {
              "name": "clearable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adiciona um botão de limpar exibido quando o campo não estiver vazio.",
              "fieldName": "clearable"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o campo.",
              "fieldName": "disabled"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Texto de espaço reservado para exibir uma dica quando o campo estiver vazio.",
              "fieldName": "placeholder"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo somente leitura.",
              "fieldName": "readonly"
            },
            {
              "name": "password-toggle",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Adiciona um botão de alternância de visibilidade de senha. Aplicável somente se `type` for `password`.",
              "fieldName": "passwordToggle"
            },
            {
              "name": "password-visible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina se uma senha em preenchimento está visível como texto plano neste momento. Aplicável somente se `type` for `password`.",
              "fieldName": "passwordVisible"
            },
            {
              "name": "no-spin-buttons",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Força ocultar os botões de incremento/decremento nativos do navegador para entradas numéricas. Aplicável somente se `type` for `number`.",
              "fieldName": "noSpinButtons"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O formulário \"dono\" deste controle de formulário. Se não informado, o formulário mais próximo na hierarquia\r\naté este elemento será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "fieldName": "form"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo como sendo de preenchimento obrigatório.",
              "fieldName": "required"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "description": "Uma expressão regular para validar a entrada do campo.",
              "fieldName": "pattern"
            },
            {
              "name": "minlength",
              "type": {
                "text": "number"
              },
              "description": "O tamanho mínimo de caracteres que serão considerados válidos.",
              "fieldName": "minlength"
            },
            {
              "name": "maxlength",
              "type": {
                "text": "number"
              },
              "description": "O tamanho máximo de caracteres que serão considerados válidos.",
              "fieldName": "maxlength"
            },
            {
              "name": "min",
              "type": {
                "text": "number | string"
              },
              "description": "O valor mínimo que será considerado válido. Aplicável somente se `type` for `date` ou `number`.",
              "fieldName": "min"
            },
            {
              "name": "max",
              "type": {
                "text": "number | string"
              },
              "description": "O valor máximo que será considerado válido. Aplicável somente se `type` for `date` ou `number`.",
              "fieldName": "max"
            },
            {
              "name": "step",
              "type": {
                "text": "number | 'any'"
              },
              "description": "Especifica a granularidade que o valor deve obedecer, ou o valor especial `any` que significa que nenhum passo é\r\nimplicado, permitindo qualquer valor numérico. Aplicável somente se `type` for `date` ou `number`.",
              "fieldName": "step"
            },
            {
              "name": "autocapitalize",
              "type": {
                "text": "'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'"
              },
              "description": "Controla se e como a entrada de texto é capitalizada enquanto inserida pelo usuário.",
              "fieldName": "autocapitalize"
            },
            {
              "name": "autocorrect",
              "type": {
                "text": "'off' | 'on'"
              },
              "description": "Indica se o recurso de correção automática do navegador deve ser utilizado.",
              "fieldName": "autocorrect"
            },
            {
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "description": "Especifica quais permissões o navegador tem para fornecer assistência no preenchimento dos valores do campo.\r\nConsulte\r\n[esta documentação no MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) para a lista de valores disponíveis.",
              "fieldName": "autocomplete"
            },
            {
              "name": "autofocus",
              "type": {
                "text": "boolean"
              },
              "description": "Indica que o campo deve receber foco assim que a página for carregada.",
              "fieldName": "autofocus"
            },
            {
              "name": "enterkeyhint",
              "type": {
                "text": "'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'"
              },
              "description": "Utilizado para definir a aparência e o comportamento da tela `Enter` em teclados virtuais.",
              "fieldName": "enterkeyhint"
            },
            {
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Habilita correção ortográfica no campo.",
              "fieldName": "spellcheck"
            },
            {
              "name": "inputmode",
              "type": {
                "text": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'"
              },
              "description": "Informa o navegador qual o tipo de dados esperado para ser inserido pelo usuário. Isso permite que o navegador\r\napresente o teclado virtual apropriado para o tipo de dados em dispositivos móveis.",
              "fieldName": "inputmode"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Caixas de entrada (_inputs_) coletam dados preenchidos pelos usuários.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/input",
          "status": "stable",
          "since": "0.3",
          "dependencies": [
            "cps-icon-button"
          ],
          "tagName": "cps-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsInput",
            "module": "components/input.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-input",
          "declaration": {
            "name": "CpsInput",
            "module": "components/input.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsInput",
          "declaration": {
            "name": "CpsInput",
            "module": "components/input.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/label.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsLabel",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (por padrão um `<span>`, podendo ser modificado com o atributo `tag`).",
              "name": "base"
            },
            {
              "description": "O `<slot>` de conteúdo interno do _label_.",
              "name": "content"
            }
          ],
          "slots": [
            {
              "description": "O conteúdo do _label_.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "| 'primary'\r\n    | 'secondary'\r\n    | 'tertiary'\r\n    | 'disabled'\r\n    | 'brand-primary'\r\n    | 'brand-secondary'\r\n    | 'brand-tertiary'\r\n    | 'inverted-primary'\r\n    | 'inverted-secondary'\r\n    | 'inverted-disabled'"
              },
              "default": "'primary'",
              "description": "A variante temática do _label_.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "| 'stamp'\r\n    | 'caption'\r\n    | 'label'\r\n    | 'body'\r\n    | 'body-emphasized'\r\n    | 'body-strong'\r\n    | 'body-large'\r\n    | 'subtitle'\r\n    | 'title'\r\n    | 'heading'\r\n    | 'display'"
              },
              "default": "'body'",
              "description": "O tamanho do _label_.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "'span' | 'small' | 'i' | 'b' | 'em' | 'strong' | 'label' | 'p' | 'div'"
              },
              "default": "'span'",
              "description": "O elemento HTML desejado para a renderização do _label_.",
              "attribute": "tag",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "| 'primary'\r\n    | 'secondary'\r\n    | 'tertiary'\r\n    | 'disabled'\r\n    | 'brand-primary'\r\n    | 'brand-secondary'\r\n    | 'brand-tertiary'\r\n    | 'inverted-primary'\r\n    | 'inverted-secondary'\r\n    | 'inverted-disabled'"
              },
              "default": "'primary'",
              "description": "A variante temática do _label_.",
              "fieldName": "variant"
            },
            {
              "name": "size",
              "type": {
                "text": "| 'stamp'\r\n    | 'caption'\r\n    | 'label'\r\n    | 'body'\r\n    | 'body-emphasized'\r\n    | 'body-strong'\r\n    | 'body-large'\r\n    | 'subtitle'\r\n    | 'title'\r\n    | 'heading'\r\n    | 'display'"
              },
              "default": "'body'",
              "description": "O tamanho do _label_.",
              "fieldName": "size"
            },
            {
              "name": "tag",
              "type": {
                "text": "'span' | 'small' | 'i' | 'b' | 'em' | 'strong' | 'label' | 'p' | 'div'"
              },
              "default": "'span'",
              "description": "O elemento HTML desejado para a renderização do _label_.",
              "fieldName": "tag"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Rótulos (_labels_) representam uma etiqueta textual para um item na interface.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/label",
          "status": "stable",
          "since": "0.6",
          "tagName": "cps-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsLabel",
            "module": "components/label.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-label",
          "declaration": {
            "name": "CpsLabel",
            "module": "components/label.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsLabel",
          "declaration": {
            "name": "CpsLabel",
            "module": "components/label.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/menu-item.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsMenuItem",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (um `<div>`).",
              "name": "base"
            },
            {
              "description": "O elemento que embrulha o ícone de checagem (caso o item de menu seja do tipo `checkbox`), visível apenas quando o item de menu está marcado.",
              "name": "check"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `prefix`.",
              "name": "prefix"
            },
            {
              "description": "O elemento que embrulha o conteúdo principal, normalmente um texto literal.",
              "name": "label"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `suffix`.",
              "name": "suffix"
            }
          ],
          "slots": [
            {
              "description": "O texto interno do item de menu.",
              "name": ""
            },
            {
              "description": "Um ícone ou elemento similar antes do conteúdo principal.",
              "name": "prefix"
            },
            {
              "description": "Um ícone ou elemento similar após o conteúdo principal.",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "cachedTextLabel",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "menuItem",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'normal' | 'checkbox'"
              },
              "default": "'normal'",
              "description": "O tipo de item de menu a ser renderizado. Para usar o estado `checked`, o valor deste atributo deve ter sido definido como `checkbox`.",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina se o _checkbox_ do item de menu está selecionado (aplicável somente se o atributo `type` for `checked`).",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Um valor único para identificar o item de menu, podendo programaticamente auxiliar na determinação de quando cada item de menu é selecionado, através do evento `cps-select` do `<cps-menu>` pai deste item.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o item de menu.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleHostClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDefaultSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleCheckedChange"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "handleTypeChange"
            },
            {
              "kind": "method",
              "name": "getTextLabel",
              "description": "Obtém o texto literal a partir do conteúdo do _slot_ padrão do item de menu."
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "'normal' | 'checkbox'"
              },
              "default": "'normal'",
              "description": "O tipo de item de menu a ser renderizado. Para usar o estado `checked`, o valor deste atributo deve ter sido definido como `checkbox`.",
              "fieldName": "type"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina se o _checkbox_ do item de menu está selecionado (aplicável somente se o atributo `type` for `checked`).",
              "fieldName": "checked"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Um valor único para identificar o item de menu, podendo programaticamente auxiliar na determinação de quando cada item de menu é selecionado, através do evento `cps-select` do `<cps-menu>` pai deste item.",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o item de menu.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Itens de menu fornecem opções para o usuário escolher em um menu.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/menu-item",
          "status": "stable",
          "since": "0.7",
          "dependencies": [
            "cps-icon"
          ],
          "tagName": "cps-menu-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsMenuItem",
            "module": "components/menu-item.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-menu-item",
          "declaration": {
            "name": "CpsMenuItem",
            "module": "components/menu-item.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsMenuItem",
          "declaration": {
            "name": "CpsMenuItem",
            "module": "components/menu-item.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/menu-label.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsMenuLabel",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (um `<slot>`).",
              "name": "base"
            }
          ],
          "slots": [
            {
              "description": "O texto interno do rótulo de menu.",
              "name": ""
            }
          ],
          "members": [],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Rótulos de menu são usados para descrever um grupo de itens de menu.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/menu-label",
          "status": "stable",
          "since": "0.7",
          "tagName": "cps-menu-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsMenuLabel",
            "module": "components/menu-label.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-menu-label",
          "declaration": {
            "name": "CpsMenuLabel",
            "module": "components/menu-label.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsMenuLabel",
          "declaration": {
            "name": "CpsMenuLabel",
            "module": "components/menu-label.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/menu.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsMenu",
          "slots": [
            {
              "description": "Conteúdo do menu, incluindo itens de menu, rótulos de menu e Separadores.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "isMenuItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "{ item: CpsMenuItem }"
              },
              "description": "Emitido quando um item de menu interno é selecionado.",
              "name": "cps-select",
              "reactName": "onCpsSelect"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Menus oferecem uma lista de opções para o usuário escolher.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/menu",
          "status": "stable",
          "since": "0.7",
          "tagName": "cps-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsMenu",
            "module": "components/menu.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-menu",
          "declaration": {
            "name": "CpsMenu",
            "module": "components/menu.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsMenu",
          "declaration": {
            "name": "CpsMenu",
            "module": "components/menu.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/notification.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsNotification",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (um `<div>`).",
              "name": "base"
            },
            {
              "description": "O elemento que embrulha o ícone opcional (um `<div>`) no qual se aplica a cor de fundo de acordo com a variante da notificação, seja ele gerado automaticamente ou informado com _slot_.",
              "name": "icon"
            },
            {
              "description": "O elemento que embrulha o conteúdo principal da notificação, usualmente contendo um ou mais elementos que definem a mensagem de exibição.",
              "name": "message"
            },
            {
              "description": "O botão de fechar a notificação (caso `closable` esteja em uso).",
              "name": "close-button"
            },
            {
              "description": "A parte `base` re-exportada do botão de fechar.",
              "name": "close-button__base"
            },
            {
              "description": "A parte `icon` re-exportada do botão de fechar.",
              "name": "close-button__icon"
            }
          ],
          "slots": [
            {
              "description": "O conteúdo principal da notificação, usualmente uma mensagem a ser exibida.",
              "name": ""
            },
            {
              "description": "Um ícone personalizado a ser exibido junto à notificação (utilize um `<cps-icon>` para melhor apresentação). Não possui efeito se o atributo `icon` estiver em uso.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "autoHideTimeout",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, 'icon', 'suffix')"
            },
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            },
            {
              "kind": "field",
              "name": "base",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indica se a notificação está aberta. Você pode alternar este atributo, manualmente ou reativamente, para mostrar e ocultar a notificação. Opcionalmente, pode utilizar os métodos `show()` e `hide()` se preferir uma abordagem imperativa, e este atributo refletirá o estado aberto da notificação em tempo real.",
              "attribute": "open",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Habilita a exibição de um botão de fechar para que o usuário possa ocultar a notificação imediatamente.",
              "attribute": "closable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante visual para apresentação da notificação.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Exibe ícone automático de acordo com a variante, ao invés de utilizar o _slot_ `icon`.",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "duration",
              "default": "Infinity",
              "description": "A duração, em milissegundos, que a notificação será exibida antes de se ocultar automaticamente. Caso o usuário interaja com a notificação antes dela se ocultar (por exemplo, movendo o _mouse_ sobre ela), o temporizador será reiniciado. O padrão `Infinity` significa que a notificação não se ocultará automaticamente.",
              "attribute": "duration"
            },
            {
              "kind": "method",
              "name": "restartAutoHide",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleCloseClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleMouseMove",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleOpenChange"
            },
            {
              "kind": "method",
              "name": "handleDurationChange"
            },
            {
              "kind": "method",
              "name": "show",
              "description": "Exibe a notificação, no local onde foi definida através de seu HTML e CSS."
            },
            {
              "kind": "method",
              "name": "hide",
              "description": "Oculta a notificação, caso esta esteja visível."
            },
            {
              "kind": "method",
              "name": "toast",
              "description": "Exibe a notificação como um _toast_. Isto irá mover a notificação para fora de sua posição no DOM e, quando ocultada, ela será removida do DOM completamente. Ao armazenar uma referência à notificação, você pode reutilizá-la chamando este método novamente. Retorna uma `Promise`que será resolvida após a notificação ser ocultada."
            },
            {
              "kind": "method",
              "name": "hasIcon",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emitido quando a notificação aparece.",
              "name": "cps-show",
              "reactName": "onCpsShow"
            },
            {
              "description": "Emitido após a notificação aparecer e todas as animações terem sido completadas.",
              "name": "cps-after-show",
              "reactName": "onCpsAfterShow"
            },
            {
              "description": "Emitido quando a notificação some.",
              "name": "cps-hide",
              "reactName": "onCpsHide"
            },
            {
              "description": "Emitido após a notificação sumir e todas as animações terem sido completadas.",
              "name": "cps-after-hide",
              "reactName": "onCpsAfterHide"
            }
          ],
          "attributes": [
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indica se a notificação está aberta. Você pode alternar este atributo, manualmente ou reativamente, para mostrar e ocultar a notificação. Opcionalmente, pode utilizar os métodos `show()` e `hide()` se preferir uma abordagem imperativa, e este atributo refletirá o estado aberto da notificação em tempo real.",
              "fieldName": "open"
            },
            {
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Habilita a exibição de um botão de fechar para que o usuário possa ocultar a notificação imediatamente.",
              "fieldName": "closable"
            },
            {
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante visual para apresentação da notificação.",
              "fieldName": "variant"
            },
            {
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Exibe ícone automático de acordo com a variante, ao invés de utilizar o _slot_ `icon`.",
              "fieldName": "icon"
            },
            {
              "name": "duration",
              "default": "Infinity",
              "description": "A duração, em milissegundos, que a notificação será exibida antes de se ocultar automaticamente. Caso o usuário interaja com a notificação antes dela se ocultar (por exemplo, movendo o _mouse_ sobre ela), o temporizador será reiniciado. O padrão `Infinity` significa que a notificação não se ocultará automaticamente.",
              "resolveInitializer": {
                "module": "src/components/notification.ts"
              },
              "fieldName": "duration"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Notificações são usadas para exibir mensagens importantes de forma pontual, localmente ou como _toast_.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/notification",
          "status": "stable",
          "since": "0.7",
          "dependencies": [
            "cps-icon-button"
          ],
          "animations": [
            {
              "name": "notification.show",
              "description": "A animação utilizada ao exibir uma notificação, por padrão uma sutil mudança de escala e opacidade, durante 250 milissegundos."
            },
            {
              "name": "notification.hide",
              "description": "A animação utilizada ao ocultar uma notificação, por padrão uma sutil mudança de escala e opacidade, durante 250 milissegundos."
            }
          ],
          "tagName": "cps-notification",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "toast",
          "parameters": [
            {
              "name": "message",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "default": "{ variant: 'informative', closable: true, duration: 5000, icon: true }",
              "type": {
                "text": "ToastOptions"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsNotification",
            "module": "components/notification.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-notification",
          "declaration": {
            "name": "CpsNotification",
            "module": "components/notification.js"
          }
        },
        {
          "kind": "js",
          "name": "toast",
          "declaration": {
            "name": "toast",
            "module": "components/notification.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsNotification",
          "declaration": {
            "name": "CpsNotification",
            "module": "components/notification.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/popover.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsPopover",
          "cssProperties": [
            {
              "description": "Tamanho da seta. Observe que independentemente desta variável, a seta não será exibida a menos que o atributo `arrow` seja utilizado.",
              "name": "--arrow-size",
              "default": "7px"
            },
            {
              "description": "A cor de fundo do _popover_ e de sua eventual seta (caso esteja sendo exibido em estilo balão).",
              "name": "--background-color",
              "default": "var(--cps-palette-neutral-500)"
            },
            {
              "description": "A bordar externa contornando o _popover_ e sua eventual seta (caso esteja sendo exibido em estilo balão).",
              "name": "--border-color",
              "default": "transparent"
            },
            {
              "description": "Uma variável somente leitura que determina a largura máxima que o _popover_ pode ter antes de transbordar. Útil para posicionar elementos filhos que precisam se ajustar junto. Esta propriedade está disponível somente quando o atributo `auto-size` é utilizado.",
              "name": "--auto-size-available-width"
            },
            {
              "description": "Uma variável somente leitura que determina a altura máxima que o _popover_ pode ter antes de transbordar. Útil para posicionar elementos filhos que precisam se ajustar junto. Esta propriedade está disponível somente quando o atributo `auto-size` é utilizado.",
              "name": "--auto-size-available-height"
            }
          ],
          "cssParts": [
            {
              "description": "A seta do _popover_, caso seja em estilo balão. Evite definir propriedades `top|bottom|left|right`, já que estes valores são atribuídos automaticamente conforme o )_popover_ se move. Esta parte CSS é mais relevante para aplicar cores que combinam com seu _popover_ personalizado, ou talvez bordas ou sombras diferenciadas.",
              "name": "arrow"
            },
            {
              "description": "O elemento base do _popover_ (um element `<div>`). Esta parte CSS é útil para definir aparência personalizada ao corpo do _popover_, como cor de fundo, sombras, etc.",
              "name": "container"
            }
          ],
          "slots": [
            {
              "description": "O conteúdo do _popover_.",
              "name": ""
            },
            {
              "description": "O elemento que o _popover_ será ancorado. Se o elemento estiver fora da estrutura hierárquica do _popover_, use o _slot_ `anchor` em vez disso.",
              "name": "anchor"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "anchorEl",
              "type": {
                "text": "Element | null"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "cleanup",
              "type": {
                "text": "ReturnType<typeof autoUpdate> | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "description": "A referência ao elemento _popover_ interno. Útil para animar e estilizar o popover com JavaScript."
            },
            {
              "kind": "field",
              "name": "arrowElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Element | string"
              },
              "description": "O elemento que o _popover_ será ancorado.\r\nSe o elemento estiver fora da estrutura hierárquica do _popover_,\r\nvocê pode fornecer o `id` deste elemento ou mesmo uma instância direta dele, atribuindo a esta propriedade.\r\nCaso contrário, se a âncora pode ser contida junto ao _popover_, use o _slot_ `anchor` em vez disso.",
              "attribute": "anchor"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Ativa a lógica de posicionamento e mostra o _popover_.\r\nQuando este atributo é removido, a lógica de posicionamento é desativada e o _popover_ será ocultado.",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "| 'top'\r\n    | 'top-start'\r\n    | 'top-end'\r\n    | 'bottom'\r\n    | 'bottom-start'\r\n    | 'bottom-end'\r\n    | 'right'\r\n    | 'right-start'\r\n    | 'right-end'\r\n    | 'left'\r\n    | 'left-start'\r\n    | 'left-end'"
              },
              "default": "'top'",
              "description": "O posicionamento preferido do _popover_ em relação à âncora.\r\nObserve que o posicionamento real poderá variar conforme configurado para manter o painel dentro da janela de visualização.",
              "attribute": "placement",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "strategy",
              "type": {
                "text": "'absolute' | 'fixed'"
              },
              "default": "'absolute'",
              "description": "Determinar como o _popover_ é posicionado.\r\nA estratégia `absolute` funciona bem na maioria dos casos, mas se rolagem externa causar o corte do _popover_, usar uma estratégia de posição `fixed` pode contorná-lo.",
              "attribute": "strategy",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A distância em pixels do _popover_ em relação à sua âncora, para afastá-lo ou aproximá-lo da âncora.\r\nPor exemplo, se `placement` for `top` ou `bottom`, `distance` definirá a distância do _popover_ no eixo vertical.",
              "attribute": "distance"
            },
            {
              "kind": "field",
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A distância em pixels do _popover_ no eixo de deslocamento de sua âncora.\r\nPor exemplo, se `placement` for `top` ou `bottom`, `skidding` definirá a distância do _popover_ no eixo horizontal.",
              "attribute": "skidding"
            },
            {
              "kind": "field",
              "name": "arrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anexa uma seta ao _popover_, para que apresente um estilo balão.\r\nO tamanho e a cor da seta podem ser personalizados usando as variáveis CSS `--arrow-size` e `--arrow-color`.\r\nPara personalizações adicionais, você também pode selecionar a seta para estilização\r\nusando `::part(arrow)` em sua folha de estilos.",
              "attribute": "arrow"
            },
            {
              "kind": "field",
              "name": "arrowPlacement",
              "type": {
                "text": "'start' | 'end' | 'center' | 'anchor'"
              },
              "default": "'anchor'",
              "description": "O posicionamento da seta.\r\nO padrão é `anchor`, que alinhará a seta o mais próximo possível do centro da âncora,\r\nconsiderando o espaço disponível e o `arrow-padding`.\r\nUm valor de `start`, `end` ou `center` alinhará a seta ao início, ao fim ou ao centro do _popover_.",
              "attribute": "arrow-placement"
            },
            {
              "kind": "field",
              "name": "arrowPadding",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "A quantidade de espaço entre a seta e as bordas do _popover_.\r\nSe o _popover_ tiver um `border-radius`, por exemplo,\r\nisso evitará que a seta ultrapasse o início do arredondamento.",
              "attribute": "arrow-padding"
            },
            {
              "kind": "field",
              "name": "flip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Quando definido, o _popover_ será girado automaticamente para caber no espaço disponível.\r\nVocê pode usar `flipFallbackPlacements` para configurar ainda mais como o posicionamento alternativo é determinado.",
              "attribute": "flip"
            },
            {
              "kind": "field",
              "name": "flipFallbackPlacements",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Se o posicionamento preferido não atender, o _popover_ será testado nestes posicionamentos alternativos,\r\naté que um atenda. Deve ser uma `String` de qualquer número de posicionamentos separados por um espaço,\r\npor exemplo, `\"top bottom left\"`. Se nenhum posicionamento atender,\r\na estratégia de posicionamento alternativo será usada em vez disso.",
              "attribute": "flip-fallback-placements"
            },
            {
              "kind": "field",
              "name": "flipFallbackStrategy",
              "type": {
                "text": "'best-fit' | 'initial'"
              },
              "default": "'best-fit'",
              "description": "Quando nem o posicionamento preferido nem os posicionamentos alternativos se encaixam,\r\neste valor será usado para determinar se o _popover_ deve ser posicionado usando o\r\nmelhor ajuste disponível com base no espaço disponível ou\r\ncomo foi inicialmente definido por seu `placement`.",
              "attribute": "flip-fallback-strategy"
            },
            {
              "kind": "field",
              "name": "flipBoundary",
              "type": {
                "text": "Element | Element[]"
              },
              "description": "A fronteira de giro descreve o(s) elemento(s) de colisão que serão verificados em casos de cortes,\r\nquando o _popover_ precisar girar para se acomodar. Por padrão, a fronteira inclui ancestrais com rolagem\r\nque fariam com que o elemento fosse cortado. Se necessário, você pode alterar a fronteira passando uma\r\nreferência à instância de um ou mais elementos nesta propriedade.",
              "attribute": "flipBoundary"
            },
            {
              "kind": "field",
              "name": "flipPadding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A quantidade de espaço, em pixels, a ser excedido antes que o comportamento de giro ocorra.",
              "attribute": "flip-padding"
            },
            {
              "kind": "field",
              "name": "shift",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Permite reposicionar o _popover_ ao longo do seu eixo atual, para mantê-lo à vista quando cortado.\r\nPor exemplo, um `placement` de `top` farão que o _popover_ esteja posicionado com seu eixo na horizontal.\r\nSe a posição do _popover_ neste eixo transpassar possíveis áreas de corte,\r\nele se moverá para a esquerda ou para a direita, conforme necessário.",
              "attribute": "shift"
            },
            {
              "kind": "field",
              "name": "shiftBoundary",
              "type": {
                "text": "Element | Element[]"
              },
              "description": "A fronteira de reposicionamento descreve o(s) elemento(s) de colisão que serão verificados em casos de cortes,\r\nquando o _popover_ precisar ser reposicionado no seu eixo para se acomodar.\r\nPor padrão, a fronteira inclui ancestrais com rolagem que fariam com que o elemento fosse cortado.\r\nSe necessário, você pode alterar a fronteira passando uma referência à instância de\r\num ou mais elementos nesta propriedade.",
              "attribute": "shiftBoundary"
            },
            {
              "kind": "field",
              "name": "shiftPadding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A quantidade de espaço, em pixels, a ser excedido antes que o reposicionamento no eixo ocorra.",
              "attribute": "shift-padding"
            },
            {
              "kind": "field",
              "name": "autoSize",
              "type": {
                "text": "'horizontal' | 'vertical' | 'both'"
              },
              "description": "Quando definido, permite que o _popover_ automaticamente se redimensione\r\npara prevenir seu transbordamento ou potenciais cortes por causa de ancestrais com rolagem.",
              "attribute": "auto-size"
            },
            {
              "kind": "field",
              "name": "sync",
              "type": {
                "text": "'width' | 'height' | 'both'"
              },
              "description": "Sincroniza a largura ou altura (ou ambos) do _popover_ com a do seu elemento âncora.",
              "attribute": "sync"
            },
            {
              "kind": "field",
              "name": "autoSizeBoundary",
              "type": {
                "text": "Element | Element[]"
              },
              "description": "A fronteira de auto-dimensionamento descreve o(s) elemento(s) de colisão que serão verificados\r\nem casos de cortes, quando o _popover_ precisar ser redimensionado para se acomodar.\r\nPor padrão, a fronteira inclui ancestrais com rolagem que fariam com que o elemento fosse cortado.\r\nSe necessário, você pode alterar a fronteira passando uma referência à instância de\r\num ou mais elementos nesta propriedade.",
              "attribute": "autoSizeBoundary"
            },
            {
              "kind": "field",
              "name": "autoSizePadding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A quantidade de espaço, em pixels, a ser excedido antes que o auto-dimensionamento ocorra.",
              "attribute": "auto-size-padding"
            },
            {
              "kind": "method",
              "name": "handleAnchorChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "start",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "stop",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "reposition",
              "description": "Força o _popover_ a se recalcular e se reposicionar."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o _popover_ é reposicionado. Este evento pode disparar numerosas vezes, evite colocar operações custosas em seu _listener_, ou alternativamente considere usar uma estratégia de _debouce_ neste evento.",
              "name": "cps-reposition",
              "reactName": "onCpsReposition"
            }
          ],
          "attributes": [
            {
              "name": "anchor",
              "type": {
                "text": "Element | string"
              },
              "description": "O elemento que o _popover_ será ancorado.\r\nSe o elemento estiver fora da estrutura hierárquica do _popover_,\r\nvocê pode fornecer o `id` deste elemento ou mesmo uma instância direta dele, atribuindo a esta propriedade.\r\nCaso contrário, se a âncora pode ser contida junto ao _popover_, use o _slot_ `anchor` em vez disso.",
              "fieldName": "anchor"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Ativa a lógica de posicionamento e mostra o _popover_.\r\nQuando este atributo é removido, a lógica de posicionamento é desativada e o _popover_ será ocultado.",
              "fieldName": "active"
            },
            {
              "name": "placement",
              "type": {
                "text": "| 'top'\r\n    | 'top-start'\r\n    | 'top-end'\r\n    | 'bottom'\r\n    | 'bottom-start'\r\n    | 'bottom-end'\r\n    | 'right'\r\n    | 'right-start'\r\n    | 'right-end'\r\n    | 'left'\r\n    | 'left-start'\r\n    | 'left-end'"
              },
              "default": "'top'",
              "description": "O posicionamento preferido do _popover_ em relação à âncora.\r\nObserve que o posicionamento real poderá variar conforme configurado para manter o painel dentro da janela de visualização.",
              "fieldName": "placement"
            },
            {
              "name": "strategy",
              "type": {
                "text": "'absolute' | 'fixed'"
              },
              "default": "'absolute'",
              "description": "Determinar como o _popover_ é posicionado.\r\nA estratégia `absolute` funciona bem na maioria dos casos, mas se rolagem externa causar o corte do _popover_, usar uma estratégia de posição `fixed` pode contorná-lo.",
              "fieldName": "strategy"
            },
            {
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A distância em pixels do _popover_ em relação à sua âncora, para afastá-lo ou aproximá-lo da âncora.\r\nPor exemplo, se `placement` for `top` ou `bottom`, `distance` definirá a distância do _popover_ no eixo vertical.",
              "fieldName": "distance"
            },
            {
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A distância em pixels do _popover_ no eixo de deslocamento de sua âncora.\r\nPor exemplo, se `placement` for `top` ou `bottom`, `skidding` definirá a distância do _popover_ no eixo horizontal.",
              "fieldName": "skidding"
            },
            {
              "name": "arrow",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Anexa uma seta ao _popover_, para que apresente um estilo balão.\r\nO tamanho e a cor da seta podem ser personalizados usando as variáveis CSS `--arrow-size` e `--arrow-color`.\r\nPara personalizações adicionais, você também pode selecionar a seta para estilização\r\nusando `::part(arrow)` em sua folha de estilos.",
              "fieldName": "arrow"
            },
            {
              "name": "arrow-placement",
              "type": {
                "text": "'start' | 'end' | 'center' | 'anchor'"
              },
              "default": "'anchor'",
              "description": "O posicionamento da seta.\r\nO padrão é `anchor`, que alinhará a seta o mais próximo possível do centro da âncora,\r\nconsiderando o espaço disponível e o `arrow-padding`.\r\nUm valor de `start`, `end` ou `center` alinhará a seta ao início, ao fim ou ao centro do _popover_.",
              "fieldName": "arrowPlacement"
            },
            {
              "name": "arrow-padding",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "A quantidade de espaço entre a seta e as bordas do _popover_.\r\nSe o _popover_ tiver um `border-radius`, por exemplo,\r\nisso evitará que a seta ultrapasse o início do arredondamento.",
              "fieldName": "arrowPadding"
            },
            {
              "name": "flip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Quando definido, o _popover_ será girado automaticamente para caber no espaço disponível.\r\nVocê pode usar `flipFallbackPlacements` para configurar ainda mais como o posicionamento alternativo é determinado.",
              "fieldName": "flip"
            },
            {
              "name": "flip-fallback-placements",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Se o posicionamento preferido não atender, o _popover_ será testado nestes posicionamentos alternativos,\r\naté que um atenda. Deve ser uma `String` de qualquer número de posicionamentos separados por um espaço,\r\npor exemplo, `\"top bottom left\"`. Se nenhum posicionamento atender,\r\na estratégia de posicionamento alternativo será usada em vez disso.",
              "fieldName": "flipFallbackPlacements"
            },
            {
              "name": "flip-fallback-strategy",
              "type": {
                "text": "'best-fit' | 'initial'"
              },
              "default": "'best-fit'",
              "description": "Quando nem o posicionamento preferido nem os posicionamentos alternativos se encaixam,\r\neste valor será usado para determinar se o _popover_ deve ser posicionado usando o\r\nmelhor ajuste disponível com base no espaço disponível ou\r\ncomo foi inicialmente definido por seu `placement`.",
              "fieldName": "flipFallbackStrategy"
            },
            {
              "name": "flipBoundary",
              "type": {
                "text": "Element | Element[]"
              },
              "description": "A fronteira de giro descreve o(s) elemento(s) de colisão que serão verificados em casos de cortes,\r\nquando o _popover_ precisar girar para se acomodar. Por padrão, a fronteira inclui ancestrais com rolagem\r\nque fariam com que o elemento fosse cortado. Se necessário, você pode alterar a fronteira passando uma\r\nreferência à instância de um ou mais elementos nesta propriedade.",
              "fieldName": "flipBoundary"
            },
            {
              "name": "flip-padding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A quantidade de espaço, em pixels, a ser excedido antes que o comportamento de giro ocorra.",
              "fieldName": "flipPadding"
            },
            {
              "name": "shift",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Permite reposicionar o _popover_ ao longo do seu eixo atual, para mantê-lo à vista quando cortado.\r\nPor exemplo, um `placement` de `top` farão que o _popover_ esteja posicionado com seu eixo na horizontal.\r\nSe a posição do _popover_ neste eixo transpassar possíveis áreas de corte,\r\nele se moverá para a esquerda ou para a direita, conforme necessário.",
              "fieldName": "shift"
            },
            {
              "name": "shiftBoundary",
              "type": {
                "text": "Element | Element[]"
              },
              "description": "A fronteira de reposicionamento descreve o(s) elemento(s) de colisão que serão verificados em casos de cortes,\r\nquando o _popover_ precisar ser reposicionado no seu eixo para se acomodar.\r\nPor padrão, a fronteira inclui ancestrais com rolagem que fariam com que o elemento fosse cortado.\r\nSe necessário, você pode alterar a fronteira passando uma referência à instância de\r\num ou mais elementos nesta propriedade.",
              "fieldName": "shiftBoundary"
            },
            {
              "name": "shift-padding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A quantidade de espaço, em pixels, a ser excedido antes que o reposicionamento no eixo ocorra.",
              "fieldName": "shiftPadding"
            },
            {
              "name": "auto-size",
              "type": {
                "text": "'horizontal' | 'vertical' | 'both'"
              },
              "description": "Quando definido, permite que o _popover_ automaticamente se redimensione\r\npara prevenir seu transbordamento ou potenciais cortes por causa de ancestrais com rolagem.",
              "fieldName": "autoSize"
            },
            {
              "name": "sync",
              "type": {
                "text": "'width' | 'height' | 'both'"
              },
              "description": "Sincroniza a largura ou altura (ou ambos) do _popover_ com a do seu elemento âncora.",
              "fieldName": "sync"
            },
            {
              "name": "autoSizeBoundary",
              "type": {
                "text": "Element | Element[]"
              },
              "description": "A fronteira de auto-dimensionamento descreve o(s) elemento(s) de colisão que serão verificados\r\nem casos de cortes, quando o _popover_ precisar ser redimensionado para se acomodar.\r\nPor padrão, a fronteira inclui ancestrais com rolagem que fariam com que o elemento fosse cortado.\r\nSe necessário, você pode alterar a fronteira passando uma referência à instância de\r\num ou mais elementos nesta propriedade.",
              "fieldName": "autoSizeBoundary"
            },
            {
              "name": "auto-size-padding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A quantidade de espaço, em pixels, a ser excedido antes que o auto-dimensionamento ocorra.",
              "fieldName": "autoSizePadding"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "_Popover_ é um utilitário que permite ancorar caixas flutuantes declarativamente a outro elemento.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/utilitários/popover",
          "status": "stable",
          "since": "0.5",
          "tagName": "cps-popover",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsPopover",
            "module": "components/popover.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-popover",
          "declaration": {
            "name": "CpsPopover",
            "module": "components/popover.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsPopover",
          "declaration": {
            "name": "CpsPopover",
            "module": "components/popover.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/radio-group.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsRadioGroup",
          "cssParts": [
            {
              "description": "O agrupamento de controle de formulário que engloba todos os elementos, como rótulo, caixa de entrada, e texto de apoio.",
              "name": "form-control"
            },
            {
              "description": "Elemento que embrulha o rótulo do controle de formulário.",
              "name": "form-control-label"
            },
            {
              "description": "Elemento que embrulha o campo do controle de formulário.",
              "name": "form-control-input"
            },
            {
              "description": "Elemento que embrulha o texto de apoio do controle de formulário.",
              "name": "form-control-help-text"
            },
            {
              "description": "O componente de grupo de botões que embrulha botões alternáveis (um `<cps-button-group>`).",
              "name": "button-group"
            },
            {
              "description": "A parte `base` re-exportada do grupo de botões.",
              "name": "button-group__base"
            }
          ],
          "slots": [
            {
              "description": "O _slot_ padrão onde elementos `<cps-radio>` ou `<cps-toggle-button>` são colocados.",
              "name": ""
            },
            {
              "description": "Rótulo informativo do campo. Obrigatório para acessibilidade adequada. Caso a injeção de conteúdos complexos não seja necessária, alternativamente utilize apenas o atributo `label`.",
              "name": "label"
            },
            {
              "description": "Texto de apoio para auxílio ao preenchimento do campo. Caso a injeção de conteúdos complexos não seja necessária, alternativamente utilize apenas o atributo `help-text`.",
              "name": "help-text"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "protected",
              "default": "new FormControlController(this)"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, 'help-text', 'label')"
            },
            {
              "kind": "field",
              "name": "customValidityMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "validationTimeout",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "validationInput",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasButtonGroup",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "generatedId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Obrigatório para acessibilidade adequada. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "helpText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O texto de apoio do campo. Se você precisar injetar HTML, use o _slot_ `help-text` em vez disso.",
              "attribute": "help-text"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'option'",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo. Este tamanho será aplicado a todos os elementos filhos `<cps-radio>` ou `<cps-toggle-button>`.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O formulário \"dono\" deste controle de formulário. Se não informado, o formulário mais próximo na hierarquia\r\naté este elemento será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "attribute": "form",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo como sendo de preenchimento obrigatório, garantindo que um `<cps-radio>` ou um `<cps-toggle-button>` internos esteja marcado.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "validity",
              "description": "Obtém o objeto de estado de validade do campo."
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "description": "Obtém a mensagem de validação do campo."
            },
            {
              "kind": "method",
              "name": "handleIdChange"
            },
            {
              "kind": "method",
              "name": "getAllRadios",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleRadioClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleLabelClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "adjustFocusableRadios",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "syncRadios",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateCheckedRadio",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleSizeChange"
            },
            {
              "kind": "method",
              "name": "handleValueChange"
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "description": "Verifica a validade em um formulário, sem exibir uma mensagem de validação. Retorna `true` quando válido, e `false` quando inválido."
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              },
              "description": "Obtém o formulário associado com este componente, se algum estiver."
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "description": "Verifica a validade em um formulário, e exibe as mensagem de validação do navegador caso o resultado seja inválido."
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "default": "''"
                }
              ],
              "description": "Define uma mensagem de validação personalizada. Passar uma `string` vazia como argumento restaura a validade do elemento."
            }
          ],
          "events": [
            {
              "description": "Emitido quando a alteração do valor do controle é confirmada pelo usuário.",
              "name": "cps-change",
              "reactName": "onCpsChange"
            },
            {
              "description": "Emitido quando o controle recebe entrada de dados.",
              "name": "cps-input",
              "reactName": "onCpsInput"
            },
            {
              "description": "Emitido quando o elemento de formulário foi checado sobre sua validade, e suas condições não foram satisfeitas.",
              "name": "cps-invalid",
              "reactName": "onCpsInvalid"
            }
          ],
          "attributes": [
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "fieldName": "id"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Obrigatório para acessibilidade adequada. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "fieldName": "label"
            },
            {
              "name": "help-text",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O texto de apoio do campo. Se você precisar injetar HTML, use o _slot_ `help-text` em vez disso.",
              "fieldName": "helpText"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'option'",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "value"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo. Este tamanho será aplicado a todos os elementos filhos `<cps-radio>` ou `<cps-toggle-button>`.",
              "fieldName": "size"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O formulário \"dono\" deste controle de formulário. Se não informado, o formulário mais próximo na hierarquia\r\naté este elemento será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "fieldName": "form"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo como sendo de preenchimento obrigatório, garantindo que um `<cps-radio>` ou um `<cps-toggle-button>` internos esteja marcado.",
              "fieldName": "required"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Grupos de opções englobam múltiplos [Radio](/componentes/radio) ou [Toggle Button](/componentes/toggle-button) para que funcionem como um único controle.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/radio-group",
          "status": "stable",
          "since": "0.6",
          "dependencies": [
            "cps-button-group"
          ],
          "tagName": "cps-radio-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsRadioGroup",
            "module": "components/radio-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-radio-group",
          "declaration": {
            "name": "CpsRadioGroup",
            "module": "components/radio-group.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsRadioGroup",
          "declaration": {
            "name": "CpsRadioGroup",
            "module": "components/radio-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/radio.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsRadio",
          "cssParts": [
            {
              "description": "O elemento base que embrulha o `<input>` e eventuais elementos de apoio para sua renderização.",
              "name": "base"
            },
            {
              "description": "O elemento circular que embrulha o estado checagem do campo.",
              "name": "control"
            },
            {
              "description": "Obtém para estilização o elemento `control`, somente quando o campo está marcado.",
              "name": "control--checked"
            },
            {
              "description": "O identificador de estado checado, um elemento `<span>` com estilização circular.",
              "name": "checked-handle"
            },
            {
              "description": "O elemento que embrulha o rótulo do campo, um elemento `<label>`.",
              "name": "label"
            }
          ],
          "slots": [
            {
              "description": "Rótulo informativo do campo. Caso a injeção de conteúdos complexos não seja necessária, alternativamente utilize apenas o atributo `label`.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this)"
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "generatedId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o campo.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina o estado de checagem do campo, ou seja, quando presente, o campo encontra-se marcado.",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleIdChange"
            },
            {
              "kind": "method",
              "name": "addEventListeners",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "removeEventListeners",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setInitialAttributes",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleCheckedChange"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            }
          ],
          "events": [
            {
              "description": "Emitido quando o controle perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando o controle obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "title"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "fieldName": "id"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "value"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "name"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "fieldName": "label"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo.",
              "fieldName": "size"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o campo.",
              "fieldName": "disabled"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina o estado de checagem do campo, ou seja, quando presente, o campo encontra-se marcado.",
              "fieldName": "checked"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Campos de opção (_radio_) permitem que o usuário selecione uma única opção de um grupo.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/radio",
          "status": "stable",
          "since": "0.6",
          "tagName": "cps-radio",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsRadio",
            "module": "components/radio.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-radio",
          "declaration": {
            "name": "CpsRadio",
            "module": "components/radio.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsRadio",
          "declaration": {
            "name": "CpsRadio",
            "module": "components/radio.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/separator.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsSeparator",
          "cssProperties": [
            {
              "description": "A cor do separador.",
              "name": "--color"
            },
            {
              "description": "A espessura do separador.",
              "name": "--thickness"
            },
            {
              "description": "O espaçamento do separador em relação aos elementos à sua volta.",
              "name": "--spacing"
            }
          ],
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (um `<div>`).",
              "name": "base"
            }
          ],
          "slots": [
            {
              "description": "O conteúdo interno do separador, recomendado um texto literal ou um `<cps-icon>`.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, '[default]')"
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desenha o separador em uma orientação vertical, ao invés do padrão horizontal.",
              "attribute": "vertical",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desenha o separador em uma orientação vertical, ao invés do padrão horizontal.",
              "fieldName": "vertical"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Separadores são usados para dividir ou agrupar elementos visualmente.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/separator",
          "status": "stable",
          "since": "0.7",
          "tagName": "cps-separator",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsSeparator",
            "module": "components/separator.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-separator",
          "declaration": {
            "name": "CpsSeparator",
            "module": "components/separator.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsSeparator",
          "declaration": {
            "name": "CpsSeparator",
            "module": "components/separator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/skeleton.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsSkeleton",
          "cssProperties": [
            {
              "description": "A cor base do indicador.",
              "name": "--color"
            },
            {
              "description": "A cor de destaque (ou brilho) a ser usada como efeito de carregamento.",
              "name": "--accent-color"
            }
          ],
          "cssParts": [
            {
              "description": "O elemento principal que sustenta o indicador (um `<div>`).",
              "name": "base"
            },
            {
              "description": "O elemento que representa o indicador em si, o qual recebe cor e animação.",
              "name": "indicator"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "effect",
              "type": {
                "text": "'sheen' | 'pulse' | 'none'"
              },
              "default": "'sheen'",
              "description": "Determina o efeito visual de carregamento do indicador.",
              "attribute": "effect"
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full' | 'none'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos, com o padrão sendo bordas arredondas em `4px`.",
              "attribute": "rounded",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "effect",
              "type": {
                "text": "'sheen' | 'pulse' | 'none'"
              },
              "default": "'sheen'",
              "description": "Determina o efeito visual de carregamento do indicador.",
              "fieldName": "effect"
            },
            {
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full' | 'none'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos, com o padrão sendo bordas arredondas em `4px`.",
              "fieldName": "rounded"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Indicador usado para apresentação visual de conteúdo que potencialmente ainda será exibido.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/skeleton",
          "status": "stable",
          "since": "0.2",
          "tagName": "cps-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsSkeleton",
            "module": "components/skeleton.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-skeleton",
          "declaration": {
            "name": "CpsSkeleton",
            "module": "components/skeleton.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsSkeleton",
          "declaration": {
            "name": "CpsSkeleton",
            "module": "components/skeleton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/spinner.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsSpinner",
          "cssProperties": [
            {
              "description": "A espessura da linha de apresentação do indicador.",
              "name": "--track-width"
            },
            {
              "description": "A cor da linha de caminho ao fundo do _spinner_.",
              "name": "--track-color"
            },
            {
              "description": "A cor do indicador giratório do _spinner_.",
              "name": "--indicator-color"
            },
            {
              "description": "O tempo que leva para o indicador completa um ciclo de animação giratório.",
              "name": "--speed"
            }
          ],
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (um `<svg>`).",
              "name": "base"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "_Spinners_ são usados para exibir o andamento de uma operação de tempo indeterminado.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/spinner",
          "status": "stable",
          "since": "0.1",
          "tagName": "cps-spinner",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsSpinner",
            "module": "components/spinner.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-spinner",
          "declaration": {
            "name": "CpsSpinner",
            "module": "components/spinner.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsSpinner",
          "declaration": {
            "name": "CpsSpinner",
            "module": "components/spinner.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/textarea.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsTextarea",
          "cssParts": [
            {
              "description": "O agrupamento de controle de formulário que engloba todos os elementos, como rótulo, caixa de entrada, e texto de apoio.",
              "name": "form-control"
            },
            {
              "description": "Elemento que embrulha o rótulo do controle de formulário.",
              "name": "form-control-label"
            },
            {
              "description": "Elemento que embrulha o campo do controle de formulário.",
              "name": "form-control-input"
            },
            {
              "description": "Elemento que embrulha o texto de apoio do controle de formulário.",
              "name": "form-control-help-text"
            },
            {
              "description": "O elemento base que embrulha o `<textarea>`.",
              "name": "base"
            },
            {
              "description": "O controle `<textarea>` interno propriamente dito.",
              "name": "textarea"
            }
          ],
          "slots": [
            {
              "description": "Rótulo informativo do campo. Caso a injeção de conteúdos complexos não seja necessária, alternativamente utilize apenas o atributo `label`.",
              "name": "label"
            },
            {
              "description": "Texto de apoio para auxílio ao preenchimento do campo. Caso a injeção de conteúdos complexos não seja necessária, alternativamente utilize apenas o atributo `help-text`.",
              "name": "help-text"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "default": "new FormControlController(this, {\r\n    assumeInteractionOn: ['cps-blur', 'cps-input']\r\n  })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, 'help-text', 'label')"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "textarea",
              "type": {
                "text": "HTMLTextAreaElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "generatedId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "defaultValue",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor padrão do controle de formulário. Usado principalmente para redefinir o campo."
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "helpText",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O texto de apoio do campo. Se você precisar injetar HTML, use o _slot_ `help-text` em vez disso.",
              "attribute": "help-text"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Texto de espaço reservado para exibir uma dica quando o campo estiver vazio.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "number"
              },
              "default": "4",
              "description": "O número de linhas para exibir por padrão.",
              "attribute": "rows"
            },
            {
              "kind": "field",
              "name": "resize",
              "type": {
                "text": "'none' | 'vertical' | 'auto'"
              },
              "default": "'vertical'",
              "description": "Controla como o campo pode ser redimensionado.",
              "attribute": "resize"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o campo.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo somente leitura.",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O formulário \"dono\" deste controle de formulário. Se não informado, o formulário mais próximo na hierarquia\r\naté este elemento será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "attribute": "form",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo como sendo de preenchimento obrigatório.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "minlength",
              "type": {
                "text": "number"
              },
              "description": "O tamanho mínimo de caracteres que serão considerados válidos.",
              "attribute": "minlength"
            },
            {
              "kind": "field",
              "name": "maxlength",
              "type": {
                "text": "number"
              },
              "description": "O tamanho máximo de caracteres que serão considerados válidos.",
              "attribute": "maxlength"
            },
            {
              "kind": "field",
              "name": "autocapitalize",
              "type": {
                "text": "'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'"
              },
              "description": "Controla se e como a entrada de texto é capitalizada enquanto inserida pelo usuário.",
              "attribute": "autocapitalize"
            },
            {
              "kind": "field",
              "name": "autocorrect",
              "type": {
                "text": "'off' | 'on'"
              },
              "description": "Indica se o recurso de correção automática do navegador deve ser utilizado.",
              "attribute": "autocorrect"
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "description": "Especifica quais permissões o navegador tem para fornecer assistência no preenchimento dos valores do campo.\r\nConsulte\r\n[esta documentação no MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) para a lista de valores disponíveis.",
              "attribute": "autocomplete"
            },
            {
              "kind": "field",
              "name": "autofocus",
              "type": {
                "text": "boolean"
              },
              "description": "Indica que o campo deve receber foco assim que a página for carregada.",
              "attribute": "autofocus"
            },
            {
              "kind": "field",
              "name": "enterkeyhint",
              "type": {
                "text": "'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'"
              },
              "description": "Utilizado para definir a aparência e o comportamento da tela `Enter` em teclados virtuais.",
              "attribute": "enterkeyhint"
            },
            {
              "kind": "field",
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Habilita correção ortográfica no campo.",
              "attribute": "spellcheck"
            },
            {
              "kind": "field",
              "name": "inputmode",
              "type": {
                "text": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'"
              },
              "description": "Informa o navegador qual o tipo de dados esperado para ser inserido pelo usuário. Isso permite que o navegador\r\napresente o teclado virtual apropriado para o tipo de dados em dispositivos móveis.",
              "attribute": "inputmode"
            },
            {
              "kind": "field",
              "name": "validity",
              "description": "Obtém o objeto de estado de validade do campo."
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "description": "Obtém a mensagem de validação do campo."
            },
            {
              "kind": "method",
              "name": "handleIdChange"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setTextareaHeight",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "handleRowsChange"
            },
            {
              "kind": "method",
              "name": "handleValueChange"
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ],
              "description": "Coloca o foco no campo."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Remove o foco do campo."
            },
            {
              "kind": "method",
              "name": "select",
              "description": "Seleciona todo o texto existente no campo."
            },
            {
              "kind": "method",
              "name": "scrollPosition",
              "return": {
                "type": {
                  "text": "{ top: number; left: number } | undefined"
                }
              },
              "parameters": [
                {
                  "name": "position",
                  "optional": true,
                  "type": {
                    "text": "{ top?: number; left?: number }"
                  }
                }
              ],
              "description": "Obtém ou atribui a posição de rolagem do campo."
            },
            {
              "kind": "method",
              "name": "setSelectionRange",
              "parameters": [
                {
                  "name": "selectionStart",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectionEnd",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectionDirection",
                  "default": "'none'",
                  "type": {
                    "text": "'forward' | 'backward' | 'none'"
                  }
                }
              ],
              "description": "Define as posições de início e término da seleção de texto do campo (índices baseados em `0`)."
            },
            {
              "kind": "method",
              "name": "setRangeText",
              "parameters": [
                {
                  "name": "replacement",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "start",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "end",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "selectMode",
                  "optional": true,
                  "type": {
                    "text": "'select' | 'start' | 'end' | 'preserve'"
                  }
                }
              ],
              "description": "Atualiza um intervalo de texto do campo com o novo valor informado (índices baseados em `0`)."
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "description": "Verifica a validade em um formulário, sem exibir uma mensagem de validação. Retorna `true` quando válido, e `false` quando inválido."
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              },
              "description": "Obtém o formulário associado com este componente, se algum estiver."
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "description": "Verifica a validade em um formulário, e exibe as mensagem de validação do navegador caso o resultado seja inválido."
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Define uma mensagem de validação personalizada. Passar uma `string` vazia como argumento restaura a validade do elemento."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o controle perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando a alteração do valor do controle é confirmada pelo usuário.",
              "name": "cps-change",
              "reactName": "onCpsChange"
            },
            {
              "description": "Emitido quando o controle obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            },
            {
              "description": "Emitido quando o controle recebe entrada de dados.",
              "name": "cps-input",
              "reactName": "onCpsInput"
            },
            {
              "description": "Emitido quando o elemento de formulário foi checado sobre sua validade, e suas condições não foram satisfeitas.",
              "name": "cps-invalid",
              "reactName": "onCpsInvalid"
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "title"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O identificador único do campo, usado como estratégia de vinculação ao rótulo e/ou texto de apoio anexado.\r\nSe não for fornecido, um UUID é gerado automaticamente.",
              "fieldName": "id"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.",
              "fieldName": "value"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do campo.",
              "fieldName": "size"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O rótulo do campo. Se você precisar injetar HTML, use o _slot_ `label` em vez disso.",
              "fieldName": "label"
            },
            {
              "name": "help-text",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O texto de apoio do campo. Se você precisar injetar HTML, use o _slot_ `help-text` em vez disso.",
              "fieldName": "helpText"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Texto de espaço reservado para exibir uma dica quando o campo estiver vazio.",
              "fieldName": "placeholder"
            },
            {
              "name": "rows",
              "type": {
                "text": "number"
              },
              "default": "4",
              "description": "O número de linhas para exibir por padrão.",
              "fieldName": "rows"
            },
            {
              "name": "resize",
              "type": {
                "text": "'none' | 'vertical' | 'auto'"
              },
              "default": "'vertical'",
              "description": "Controla como o campo pode ser redimensionado.",
              "fieldName": "resize"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o campo.",
              "fieldName": "disabled"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo somente leitura.",
              "fieldName": "readonly"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O formulário \"dono\" deste controle de formulário. Se não informado, o formulário mais próximo na hierarquia\r\naté este elemento será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "fieldName": "form"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Torna o campo como sendo de preenchimento obrigatório.",
              "fieldName": "required"
            },
            {
              "name": "minlength",
              "type": {
                "text": "number"
              },
              "description": "O tamanho mínimo de caracteres que serão considerados válidos.",
              "fieldName": "minlength"
            },
            {
              "name": "maxlength",
              "type": {
                "text": "number"
              },
              "description": "O tamanho máximo de caracteres que serão considerados válidos.",
              "fieldName": "maxlength"
            },
            {
              "name": "autocapitalize",
              "type": {
                "text": "'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'"
              },
              "description": "Controla se e como a entrada de texto é capitalizada enquanto inserida pelo usuário.",
              "fieldName": "autocapitalize"
            },
            {
              "name": "autocorrect",
              "type": {
                "text": "'off' | 'on'"
              },
              "description": "Indica se o recurso de correção automática do navegador deve ser utilizado.",
              "fieldName": "autocorrect"
            },
            {
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "description": "Especifica quais permissões o navegador tem para fornecer assistência no preenchimento dos valores do campo.\r\nConsulte\r\n[esta documentação no MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) para a lista de valores disponíveis.",
              "fieldName": "autocomplete"
            },
            {
              "name": "autofocus",
              "type": {
                "text": "boolean"
              },
              "description": "Indica que o campo deve receber foco assim que a página for carregada.",
              "fieldName": "autofocus"
            },
            {
              "name": "enterkeyhint",
              "type": {
                "text": "'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'"
              },
              "description": "Utilizado para definir a aparência e o comportamento da tela `Enter` em teclados virtuais.",
              "fieldName": "enterkeyhint"
            },
            {
              "name": "spellcheck",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Habilita correção ortográfica no campo.",
              "fieldName": "spellcheck"
            },
            {
              "name": "inputmode",
              "type": {
                "text": "'none' | 'text' | 'decimal' | 'numeric' | 'tel' | 'search' | 'email' | 'url'"
              },
              "description": "Informa o navegador qual o tipo de dados esperado para ser inserido pelo usuário. Isso permite que o navegador\r\napresente o teclado virtual apropriado para o tipo de dados em dispositivos móveis.",
              "fieldName": "inputmode"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Caixas de texto (_textareas_) coletam dados do usuário e permitem múltiplas linhas de texto.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/textare",
          "status": "stable",
          "since": "0.4",
          "dependencies": [
            "cps-icon"
          ],
          "tagName": "cps-textarea",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsTextarea",
            "module": "components/textarea.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-textarea",
          "declaration": {
            "name": "CpsTextarea",
            "module": "components/textarea.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsTextarea",
          "declaration": {
            "name": "CpsTextarea",
            "module": "components/textarea.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/toggle-button.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsToggleButton",
          "cssParts": [
            {
              "description": "O elemento base que embrulha o botão (um `<div>`).",
              "name": "base"
            },
            {
              "description": "O elemento principal propriamente dito (um `<button>`).",
              "name": "button"
            },
            {
              "description": "Obtém para estilização o elemento `button`, somente quando o este está marcado.",
              "name": "button--checked"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `prefix`.",
              "name": "prefix"
            },
            {
              "description": "O elemento que embrulha o conteúdo principal, normalmente o _label_ do botão.",
              "name": "content"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `suffix`.",
              "name": "suffix"
            }
          ],
          "slots": [
            {
              "description": "O texto interno do botão.",
              "name": ""
            },
            {
              "description": "Um ícone ou elemento similar antes do conteúdo principal.",
              "name": "prefix"
            },
            {
              "description": "Um ícone ou elemento similar após o conteúdo principal.",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, '[default]', 'prefix', 'suffix')"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hiddenInput",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina o estado de checagem do campo, ou seja, quando presente, o campo encontra-se marcado.\r\n\r\nQuando utilizado dentro de um `RadioGroup`, o valor do grupo sobrepõe o estado de checagem individual do botão alternável, ou seja, não utilize este atributo quando o botão fizer parte de um _radio group_.",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.\r\n\r\nQuando utilizado dentro de um `RadioGroup`, o valor é também utilizado como critério de marcação, mantendo-se o grupo e seus botões em sincronia. Desta forma, o valor deve ser único para cada botão alternável dentro do mesmo grupo.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão alternável.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão alternável.\r\n\r\nQuando usado dentro de um `RadioGroup`, o tamanho será determinado pelo tamanho do grupo, portanto, tipicamente esse atributo pode ser omitido.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos do botão alternável, com o padrão sendo bordas arredondas em `4px`.",
              "attribute": "rounded",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "click",
              "description": "Simula um _click_ no botão alternável."
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ],
              "description": "Coloca o foco no botão alternável."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Remove o foco do botão alternável."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o botão perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando o botão obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            }
          ],
          "attributes": [
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Determina o estado de checagem do campo, ou seja, quando presente, o campo encontra-se marcado.\r\n\r\nQuando utilizado dentro de um `RadioGroup`, o valor do grupo sobrepõe o estado de checagem individual do botão alternável, ou seja, não utilize este atributo quando o botão fizer parte de um _radio group_.",
              "fieldName": "checked"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "O valor do campo, submetido em par _name_/_value_ com os dados do formulário.\r\n\r\nQuando utilizado dentro de um `RadioGroup`, o valor é também utilizado como critério de marcação, mantendo-se o grupo e seus botões em sincronia. Desta forma, o valor deve ser único para cada botão alternável dentro do mesmo grupo.",
              "fieldName": "value"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão alternável.",
              "fieldName": "disabled"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão alternável.\r\n\r\nQuando usado dentro de um `RadioGroup`, o tamanho será determinado pelo tamanho do grupo, portanto, tipicamente esse atributo pode ser omitido.",
              "fieldName": "size"
            },
            {
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos do botão alternável, com o padrão sendo bordas arredondas em `4px`.",
              "fieldName": "rounded"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Botões alternáveis permitem marcar e desmarcar uma opção, individualmente ou como parte de um grupo.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/toggle-button",
          "status": "stable",
          "since": "0.6",
          "tagName": "cps-toggle-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsToggleButton",
            "module": "components/toggle-button.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-toggle-button",
          "declaration": {
            "name": "CpsToggleButton",
            "module": "components/toggle-button.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsToggleButton",
          "declaration": {
            "name": "CpsToggleButton",
            "module": "components/toggle-button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/tooltip.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsTooltip",
          "cssProperties": [
            {
              "description": "O tamanho máximo da dica de ferramenta, antes que seu conteúdo seja quebrado em outra linha.",
              "name": "--max-width"
            },
            {
              "description": "A quantidade de tempo a esperar antes de ocultar a dica de ferramenta, ao tirar o ponteiro.",
              "name": "--hide-delay"
            },
            {
              "description": "A quantidade de tempo a esperar antes de exibir a dica de ferramenta, ao colocar o ponteiro sobre.",
              "name": "--show-delay"
            }
          ],
          "cssParts": [
            {
              "description": "O elemento base que embrulha o componente (um elemento `<cps-popover>`).",
              "name": "base"
            },
            {
              "description": "A parte CSS `container` exportada do _popover_ base. Use-a para atingir o contêiner do elemento `<cps-popover>` base, para estilizações avançadas deste.",
              "name": "base__container"
            },
            {
              "description": "A parte CSS `arrow` exportada do _popover_ base. Use-a para atingir a seta do elemento `<cps-popover>` base, para estilizações avançadas desta.",
              "name": "base__container"
            },
            {
              "description": "O corpo da dica de ferramenta, onde seu conteúdo é renderizado.",
              "name": "body"
            }
          ],
          "slots": [
            {
              "description": "O elemento alvo da dica de ferramenta. Evite ter mais de um elemento alvo na hierarquia, pois os subsequentes serão ignorados (neste caso, embrulhe os vários elementos em uma _tag_ principal, como `<span>` ou `<div>`).",
              "name": ""
            },
            {
              "description": "O conteúdo a ser renderizado na dica de ferramenta. Alternativamente, você pode usar o atributo `content`.",
              "name": "content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "hoverTimeout",
              "type": {
                "text": "number"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "body",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "popover",
              "type": {
                "text": "CpsPopover"
              }
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O conteúdo da dica de ferramenta. Se precisar exibir conteúdo HTML ao invés de texto simples, use o _slot_ `content` em vez deste atributo.",
              "attribute": "content"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "| 'top'\r\n    | 'top-start'\r\n    | 'top-end'\r\n    | 'right'\r\n    | 'right-start'\r\n    | 'right-end'\r\n    | 'bottom'\r\n    | 'bottom-start'\r\n    | 'bottom-end'\r\n    | 'left'\r\n    | 'left-start'\r\n    | 'left-end'"
              },
              "default": "'top'",
              "description": "O posicionamento preferido da dica de ferramenta.\r\nObserve que o posicionamento real pode variar conforme necessário,\r\npara manter a dica de ferramenta dentro da janela de visualização.",
              "attribute": "placement"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita a dica de ferramenta, para que ela não seja exibida quando o elemento alvo é interagido.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "A distância em pixels do _popover_ em relação à seu elemento alvo, para afastá-lo ou aproximá-lo deste.\r\nPor exemplo, se `placement` for `top` ou `bottom`, `distance` definirá a distância do _popover_ no eixo vertical.",
              "attribute": "distance"
            },
            {
              "kind": "field",
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A distância em pixels do _popover_ no eixo de deslocamento de seu elemento alvo.\r\nPor exemplo, se `placement` for `top` ou `bottom`, `skidding` definirá a distância do _popover_ no eixo horizontal.",
              "attribute": "skidding"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indica se a dica de ferramenta está ou não visível atualmente.\r\nVocê pode usar isso declarativamente e reativamente, ao invés de precisar\r\nimperativamente dos métodos `show` e `hide`.",
              "attribute": "open",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "string"
              },
              "default": "'hover focus'",
              "description": "Controla como a dica de ferramenta é ativada. As opções possíveis incluem `click`, `hover`, `focus` e `manual`.\r\nMúltiplas opções podem ser passadas, separando-as com um espaço, exceto o valor `manual`.\r\nQuando `manual` é usado, a dica de ferramenta deve ser exclusivamente manipulada programaticamente.",
              "attribute": "trigger"
            },
            {
              "kind": "field",
              "name": "hoist",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Habilite esta opção para que a dica de ferramenta seja exibida em um contêiner de nível superior\r\n(usualmente, o `<body>`), ao invés de ser renderizado junto ao seu elemento alvo.\r\n\r\nIsso é útil quando você precisa exibir conteúdo que pode ser cortado por um contêiner pai que\r\ntenha `overflow` `hidden`, `scroll` ou `auto`, ou quando você precisa exibir a dica de ferramenta\r\nem um contêiner com um `z-index` menor que o do seu elemento alvo.\r\n\r\nIçar usa uma estratégia de posicionamento fixo que funciona em muitos cenários,\r\nmas não em todos, então teste com cautela se precisar habilitar.",
              "attribute": "hoist"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleMouseOut",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasTrigger",
              "privacy": "private",
              "parameters": [
                {
                  "name": "triggerType",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleOpenChange"
            },
            {
              "kind": "method",
              "name": "handleOptionsChange"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "show",
              "description": "Força a exibição imediata da dica de ferramenta."
            },
            {
              "kind": "method",
              "name": "hide",
              "description": "Força a ocultação imediata da dica de ferramenta."
            }
          ],
          "events": [
            {
              "description": "Emitido quando a dica de ferramenta começa a ser exibida.",
              "name": "cps-show",
              "reactName": "onCpsShow"
            },
            {
              "description": "Emitido após a dica de ferramenta ser exibida e todas as animações terem sido concluídas.",
              "name": "cps-after-show",
              "reactName": "onCpsAfterShow"
            },
            {
              "description": "Emitido quando a dica de ferramenta começa a ser ocultada.",
              "name": "cps-hide",
              "reactName": "onCpsHide"
            },
            {
              "description": "Emitido após a dica de ferramenta ser ocultada e todas as animações terem sido concluídas.",
              "name": "cps-after-hide",
              "reactName": "onCpsAfterHide"
            }
          ],
          "attributes": [
            {
              "name": "content",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O conteúdo da dica de ferramenta. Se precisar exibir conteúdo HTML ao invés de texto simples, use o _slot_ `content` em vez deste atributo.",
              "fieldName": "content"
            },
            {
              "name": "placement",
              "type": {
                "text": "| 'top'\r\n    | 'top-start'\r\n    | 'top-end'\r\n    | 'right'\r\n    | 'right-start'\r\n    | 'right-end'\r\n    | 'bottom'\r\n    | 'bottom-start'\r\n    | 'bottom-end'\r\n    | 'left'\r\n    | 'left-start'\r\n    | 'left-end'"
              },
              "default": "'top'",
              "description": "O posicionamento preferido da dica de ferramenta.\r\nObserve que o posicionamento real pode variar conforme necessário,\r\npara manter a dica de ferramenta dentro da janela de visualização.",
              "fieldName": "placement"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita a dica de ferramenta, para que ela não seja exibida quando o elemento alvo é interagido.",
              "fieldName": "disabled"
            },
            {
              "name": "distance",
              "type": {
                "text": "number"
              },
              "default": "10",
              "description": "A distância em pixels do _popover_ em relação à seu elemento alvo, para afastá-lo ou aproximá-lo deste.\r\nPor exemplo, se `placement` for `top` ou `bottom`, `distance` definirá a distância do _popover_ no eixo vertical.",
              "fieldName": "distance"
            },
            {
              "name": "skidding",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "A distância em pixels do _popover_ no eixo de deslocamento de seu elemento alvo.\r\nPor exemplo, se `placement` for `top` ou `bottom`, `skidding` definirá a distância do _popover_ no eixo horizontal.",
              "fieldName": "skidding"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indica se a dica de ferramenta está ou não visível atualmente.\r\nVocê pode usar isso declarativamente e reativamente, ao invés de precisar\r\nimperativamente dos métodos `show` e `hide`.",
              "fieldName": "open"
            },
            {
              "name": "trigger",
              "type": {
                "text": "string"
              },
              "default": "'hover focus'",
              "description": "Controla como a dica de ferramenta é ativada. As opções possíveis incluem `click`, `hover`, `focus` e `manual`.\r\nMúltiplas opções podem ser passadas, separando-as com um espaço, exceto o valor `manual`.\r\nQuando `manual` é usado, a dica de ferramenta deve ser exclusivamente manipulada programaticamente.",
              "fieldName": "trigger"
            },
            {
              "name": "hoist",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Habilite esta opção para que a dica de ferramenta seja exibida em um contêiner de nível superior\r\n(usualmente, o `<body>`), ao invés de ser renderizado junto ao seu elemento alvo.\r\n\r\nIsso é útil quando você precisa exibir conteúdo que pode ser cortado por um contêiner pai que\r\ntenha `overflow` `hidden`, `scroll` ou `auto`, ou quando você precisa exibir a dica de ferramenta\r\nem um contêiner com um `z-index` menor que o do seu elemento alvo.\r\n\r\nIçar usa uma estratégia de posicionamento fixo que funciona em muitos cenários,\r\nmas não em todos, então teste com cautela se precisar habilitar.",
              "fieldName": "hoist"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element.js"
          },
          "summary": "Dicas de ferramenta (_tooltips_) exibem informações adicionais contextuais.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/tooltip",
          "status": "stable",
          "since": "0.5",
          "dependencies": [
            "cps-popover"
          ],
          "animations": [
            {
              "name": "tooltip.show",
              "description": "A animação a ser usada ao exibir a dica de ferramenta."
            },
            {
              "name": "tooltip.hide",
              "description": "A animação a ser usada ao ocultar a dica de ferramenta."
            }
          ],
          "tagName": "cps-tooltip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsTooltip",
            "module": "components/tooltip.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-tooltip",
          "declaration": {
            "name": "CpsTooltip",
            "module": "components/tooltip.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsTooltip",
          "declaration": {
            "name": "CpsTooltip",
            "module": "components/tooltip.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon/library.default.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "library",
          "type": {
            "text": "IconLibrary"
          },
          "default": "{\r\n  name: 'default',\r\n  resolver: name => getBasePath(`assets/icons/${name}.svg`)\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "library",
            "module": "components/icon/library.default.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon/library.system.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "systemLibrary",
          "type": {
            "text": "IconLibrary"
          },
          "default": "{\r\n  name: 'system',\r\n  resolver: (name: keyof typeof icons) => {\r\n    if (name in icons) {\r\n      return `data:image/svg+xml,${encodeURIComponent(icons[name])}`;\r\n    }\r\n    return '';\r\n  }\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "systemLibrary",
            "module": "components/icon/library.system.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon/library.js",
      "declarations": [
        {
          "kind": "function",
          "name": "watchIcon",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "CpsIcon"
              }
            }
          ],
          "description": "Adds an icon to the list of watched icons."
        },
        {
          "kind": "function",
          "name": "unwatchIcon",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "CpsIcon"
              }
            }
          ],
          "description": "Removes an icon from the list of watched icons."
        },
        {
          "kind": "function",
          "name": "getIconLibrary",
          "parameters": [
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Returns a library from the registry."
        },
        {
          "kind": "function",
          "name": "registerIconLibrary",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "text": "Omit<IconLibrary, 'name'>"
              }
            }
          ],
          "description": "Adds an icon library to the registry, or overrides an existing one."
        },
        {
          "kind": "function",
          "name": "unregisterIconLibrary",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Removes an icon library from the registry."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "watchIcon",
          "declaration": {
            "name": "watchIcon",
            "module": "components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "unwatchIcon",
          "declaration": {
            "name": "unwatchIcon",
            "module": "components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "getIconLibrary",
          "declaration": {
            "name": "getIconLibrary",
            "module": "components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "registerIconLibrary",
          "declaration": {
            "name": "registerIconLibrary",
            "module": "components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "unregisterIconLibrary",
          "declaration": {
            "name": "unregisterIconLibrary",
            "module": "components/icon/library.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon/request.js",
      "declarations": [
        {
          "kind": "function",
          "name": "requestIcon",
          "return": {
            "type": {
              "text": "Promise<IconFile>"
            }
          },
          "parameters": [
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestIcon",
          "declaration": {
            "name": "requestIcon",
            "module": "components/icon/request.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/include/request.js",
      "declarations": [
        {
          "kind": "function",
          "name": "requestInclude",
          "return": {
            "type": {
              "text": "Promise<IncludeFile>"
            }
          },
          "parameters": [
            {
              "name": "src",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "mode",
              "default": "'cors'",
              "type": {
                "text": "'cors' | 'no-cors' | 'same-origin'"
              }
            }
          ],
          "description": "Fetches an include file from a remote source. Caching is enabled so the origin is only pinged once."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestInclude",
          "declaration": {
            "name": "requestInclude",
            "module": "components/include/request.js"
          }
        }
      ]
    }
  ],
  "package": {
    "name": "@cps-elements/web",
    "description": "Web Components de ponta, sem complicação.",
    "version": "0.7.2",
    "author": "Erick Eduardo Petrucelli <erickpetru@gmail.com>",
    "homepage": "https://github.com/cpsrepositorio/cps-elements",
    "license": "MIT"
  }
}
