{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "components/badge.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsBadge",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito.",
              "name": "base"
            }
          ],
          "slots": [
            {
              "description": "O conteúdo do _badge_.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, '[default]')"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante temática do _badge_.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Exibe ícone automático de acordo com a variante, ao invés de permitir conteúdo arbitrário no _badge_.",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "square",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Força o _badge_ a um formato retangular, sem arredondamento de bordas.",
              "attribute": "square",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Efeito pulsante para chamar atenção extra.",
              "attribute": "pulse",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "hasSingleCharacter",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasIcon",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante temática do _badge_.",
              "fieldName": "variant"
            },
            {
              "name": "icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Exibe ícone automático de acordo com a variante, ao invés de permitir conteúdo arbitrário no _badge_.",
              "fieldName": "icon"
            },
            {
              "name": "square",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Força o _badge_ a um formato retangular, sem arredondamento de bordas.",
              "fieldName": "square"
            },
            {
              "name": "pulse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Efeito pulsante para chamar atenção extra.",
              "fieldName": "pulse"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "Distintivos (_badges_) são usados para chamar atenção de forma sutil\r\ne não intrusiva, comumente para exibição de notificações de _status_,\r\nindicação de novo conteúdo ou contagens.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/badge",
          "status": "stable",
          "since": "0.2",
          "dependencies": [
            "cps-icon"
          ],
          "tagName": "cps-badge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsBadge",
            "module": "components/badge.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-badge",
          "declaration": {
            "name": "CpsBadge",
            "module": "components/badge.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsBadge",
          "declaration": {
            "name": "CpsBadge",
            "module": "components/badge.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/button-group.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsButtonGroup",
          "cssParts": [
            {
              "description": "O elemento base que embrulha o grupo.",
              "name": "base"
            }
          ],
          "slots": [
            {
              "description": "Um ou mais elementos `<cps-button>` a exibir dentro do grupo de botões.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "disableRole",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Um rótulo descritivo para o grupo de botões. Este não será exibido na interface, mas será anunciado\r\npor dispositivos de acessibilidade durante a interação com o controle, sendo fortemente recomendado.",
              "attribute": "label"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOver",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Um rótulo descritivo para o grupo de botões. Este não será exibido na interface, mas será anunciado\r\npor dispositivos de acessibilidade durante a interação com o controle, sendo fortemente recomendado.",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "Grupos de botões podem ser usados para agrupar botões relacionados em seções.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/button-group",
          "status": "stable",
          "since": "0.1",
          "tagName": "cps-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsButtonGroup",
            "module": "components/button-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-button-group",
          "declaration": {
            "name": "CpsButtonGroup",
            "module": "components/button-group.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsButtonGroup",
          "declaration": {
            "name": "CpsButtonGroup",
            "module": "components/button-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/button.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsButton",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (que pode ser `<button>` ou `<a>`).",
              "name": "base"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `prefix`.",
              "name": "prefix"
            },
            {
              "description": "O elemento que embrulha o conteúdo principal, normalmente o _label_ do botão.",
              "name": "content"
            },
            {
              "description": "O elemento que embrulha a renderização do _slot_ `suffix`.",
              "name": "suffix"
            },
            {
              "description": "O elemento de sinalização de menu, normalmente um `<cps-icon>` com o ícone de circunflexo para baixo.",
              "name": "caret"
            }
          ],
          "slots": [
            {
              "description": "O texto interno do botão.",
              "name": ""
            },
            {
              "description": "Um ícone ou elemento similar antes do conteúdo principal.",
              "name": "prefix"
            },
            {
              "description": "Um ícone ou elemento similar após o conteúdo principal.",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formControlController",
              "privacy": "private",
              "default": "new FormControlController(this, {\r\n    form: input => {\r\n      // Buttons support a form attribute that points to an arbitrary form, so if this attribute is set we need to query\r\n      // the form from the same root using its id\r\n      if (input.hasAttribute('form')) {\r\n        const doc = input.getRootNode() as Document | ShadowRoot;\r\n        const formId = input.getAttribute('form')!;\r\n        return doc.getElementById(formId) as HTMLFormElement;\r\n      }\r\n\r\n      // Fall back to the closest containing form\r\n      return input.closest('form');\r\n    },\r\n    assumeInteractionOn: ['click']\r\n  })"
            },
            {
              "kind": "field",
              "name": "hasSlotController",
              "privacy": "private",
              "default": "new HasSlotController(this, '[default]', 'prefix', 'suffix')"
            },
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            },
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "HTMLButtonElement | HTMLLinkElement"
              }
            },
            {
              "kind": "field",
              "name": "isFocused",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'default' | 'accent' | 'transparent'"
              },
              "default": "'default'",
              "description": "A variante visual para apresentação do botão.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "caret",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta um sinalizador de menu ao final do botão. Usado para indicar que o botão dispara um menu de contexto ou algum comportamento similar.",
              "attribute": "caret",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "waiting",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta o botão em estado de carregamento.",
              "attribute": "waiting",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos do botão, com o padrão sendo bordas arredondas em `4px`.",
              "attribute": "rounded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit' | 'reset'"
              },
              "default": "'button'",
              "description": "O tipo do botão. Observe que o valor padrão é `button` ao invés de `submit`, o oposto de como um\r\n`<button>` nativo se comporta. Quando `submit`, o botão auto-submete o `<form>` em que estiver contido.",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do botão, submetido em par _name_/_value_ com os dados do formulário,\r\nsomente se este botão for o submissor. Ignorado quando `href` está presente.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do botão, submetido em par _name_/_value_ com os dados do formulário,\r\nsomente se este botão for o submissor. Ignorado quando `href` está presente.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Quando definido, o botão será renderizado como um elemento `<a>` com este `href` definido, ao invés de um elemento `<button>`.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "'_blank' | '_parent' | '_self' | '_top'"
              },
              "description": "Informa o navegador qual o alvo de abertura do _link_. Usado somente se `href` estiver presente.",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "'noreferrer noopener'",
              "description": "Quando usando `href`, este atributo irá mapear o valor do atributo `rel` subjacente com o valor\r\npadrão `noreferrer noopener`, por questões de segurança. No entanto, se você estiver usando `target`\r\npara apontar para uma guia/janela específica, isso impedirá que ele funcione corretamente.\r\nPara este cenário específico, defina como vazio ou altere o valor de `rel` para outro valor.",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "description": "Informa o navegador para baixar o arquivo vinculado, com o nome definido aqui. Usado somente se `href` estiver presente.",
              "attribute": "download"
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "string"
              },
              "description": "O formulário \"dono\" deste botão. Se não informado, o formulário mais próximo na hierarquia\r\naté este botão será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "attribute": "form"
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "description": "Usado para sobrescrever o atributo `action` do formulário \"dono\" deste botão.",
              "attribute": "formaction"
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'"
              },
              "description": "Usado para sobrescrever o atributo `enctype` do formulário \"dono\" deste botão.",
              "attribute": "formenctype"
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "'post' | 'get'"
              },
              "description": "Usado para sobrescrever o atributo `method` do formulário \"dono\" deste botão.",
              "attribute": "formmethod"
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "description": "Usado para sobrescrever o atributo `novalidate` do formulário \"dono\" deste botão.",
              "attribute": "formnovalidate"
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "'_self' | '_blank' | '_parent' | '_top' | string"
              },
              "description": "Usado para sobrescrever o atributo `target` do formulário \"dono\" deste botão.",
              "attribute": "formtarget"
            },
            {
              "kind": "field",
              "name": "validity",
              "description": "Obtém o objeto de estado de validade do botão."
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "description": "Obtém a mensagem de validação do botão."
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleHostClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isButton",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "isLink",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange"
            },
            {
              "kind": "method",
              "name": "click",
              "description": "Simula um _click_ no botão."
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ],
              "description": "Coloca o foco no botão."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Remove o foco do botão."
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "description": "Verifica a validade em um formulário, sem exibir uma mensagem de validação. Retorna `true` quando válido, e `false` quando inválido."
            },
            {
              "kind": "method",
              "name": "getForm",
              "return": {
                "type": {
                  "text": "HTMLFormElement | null"
                }
              },
              "description": "Obtém o formulário associado com este componente, se algum estiver."
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "description": "Verifica a validade em um formulário, e exibe as mensagem de validação do navegador caso o resultado seja inválido."
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Define uma mensagem de validação personalizada. Passar uma `string` vazia como argumento restaura a validade do elemento."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o botão perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando o botão obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            },
            {
              "description": "Emitido quando o elemento de formulário foi checado sobre sua validade, e suas condições não foram satisfeitas.",
              "name": "cps-invalid",
              "reactName": "onCpsInvalid"
            }
          ],
          "attributes": [
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "title"
            },
            {
              "name": "variant",
              "type": {
                "text": "'default' | 'accent' | 'transparent'"
              },
              "default": "'default'",
              "description": "A variante visual para apresentação do botão.",
              "fieldName": "variant"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão.",
              "fieldName": "size"
            },
            {
              "name": "caret",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta um sinalizador de menu ao final do botão. Usado para indicar que o botão dispara um menu de contexto ou algum comportamento similar.",
              "fieldName": "caret"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão.",
              "fieldName": "disabled"
            },
            {
              "name": "waiting",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apresenta o botão em estado de carregamento.",
              "fieldName": "waiting"
            },
            {
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos do botão, com o padrão sendo bordas arredondas em `4px`.",
              "fieldName": "rounded"
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit' | 'reset'"
              },
              "default": "'button'",
              "description": "O tipo do botão. Observe que o valor padrão é `button` ao invés de `submit`, o oposto de como um\r\n`<button>` nativo se comporta. Quando `submit`, o botão auto-submete o `<form>` em que estiver contido.",
              "fieldName": "type"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O nome do botão, submetido em par _name_/_value_ com os dados do formulário,\r\nsomente se este botão for o submissor. Ignorado quando `href` está presente.",
              "fieldName": "name"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "O valor do botão, submetido em par _name_/_value_ com os dados do formulário,\r\nsomente se este botão for o submissor. Ignorado quando `href` está presente.",
              "fieldName": "value"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Quando definido, o botão será renderizado como um elemento `<a>` com este `href` definido, ao invés de um elemento `<button>`.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "type": {
                "text": "'_blank' | '_parent' | '_self' | '_top'"
              },
              "description": "Informa o navegador qual o alvo de abertura do _link_. Usado somente se `href` estiver presente.",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "'noreferrer noopener'",
              "description": "Quando usando `href`, este atributo irá mapear o valor do atributo `rel` subjacente com o valor\r\npadrão `noreferrer noopener`, por questões de segurança. No entanto, se você estiver usando `target`\r\npara apontar para uma guia/janela específica, isso impedirá que ele funcione corretamente.\r\nPara este cenário específico, defina como vazio ou altere o valor de `rel` para outro valor.",
              "fieldName": "rel"
            },
            {
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "description": "Informa o navegador para baixar o arquivo vinculado, com o nome definido aqui. Usado somente se `href` estiver presente.",
              "fieldName": "download"
            },
            {
              "name": "form",
              "type": {
                "text": "string"
              },
              "description": "O formulário \"dono\" deste botão. Se não informado, o formulário mais próximo na hierarquia\r\naté este botão será utilizado. Se informado, o valor deve ser um `id` único de um formulário\r\nexistente no documento.",
              "fieldName": "form"
            },
            {
              "name": "formaction",
              "type": {
                "text": "string"
              },
              "description": "Usado para sobrescrever o atributo `action` do formulário \"dono\" deste botão.",
              "fieldName": "formAction"
            },
            {
              "name": "formenctype",
              "type": {
                "text": "'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'"
              },
              "description": "Usado para sobrescrever o atributo `enctype` do formulário \"dono\" deste botão.",
              "fieldName": "formEnctype"
            },
            {
              "name": "formmethod",
              "type": {
                "text": "'post' | 'get'"
              },
              "description": "Usado para sobrescrever o atributo `method` do formulário \"dono\" deste botão.",
              "fieldName": "formMethod"
            },
            {
              "name": "formnovalidate",
              "type": {
                "text": "boolean"
              },
              "description": "Usado para sobrescrever o atributo `novalidate` do formulário \"dono\" deste botão.",
              "fieldName": "formNoValidate"
            },
            {
              "name": "formtarget",
              "type": {
                "text": "'_self' | '_blank' | '_parent' | '_top' | string"
              },
              "description": "Usado para sobrescrever o atributo `target` do formulário \"dono\" deste botão.",
              "fieldName": "formTarget"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "Botões representam ações que estão disponíveis ao usuário.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/button",
          "status": "stable",
          "since": "0.1",
          "dependencies": [
            "cps-icon",
            "cps-spinner"
          ],
          "tagName": "cps-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsButton",
            "module": "components/button.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-button",
          "declaration": {
            "name": "CpsButton",
            "module": "components/button.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsButton",
          "declaration": {
            "name": "CpsButton",
            "module": "components/button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/chip.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsChip",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (um `<span>`).",
              "name": "base"
            },
            {
              "description": "O `<slot>` de conteúdo interno do _chip_.",
              "name": "content"
            },
            {
              "description": "O botão de remoção do _chip_ (um `<cps-icon-button>`).",
              "name": "remove-button"
            },
            {
              "description": "A parte `base` re-exportada do botão de remoção.",
              "name": "remove-button__base"
            },
            {
              "description": "A parte `icon` re-exportada do botão de remoção.",
              "name": "remove-button__icon"
            }
          ],
          "slots": [
            {
              "description": "O conteúdo do _chip_.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante visual para apresentação do _chip_.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do _chip_.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Marca o _chip_ como removível, exibindo-se um botão de remoção junto ao conteúdo interno.",
              "attribute": "removable"
            },
            {
              "kind": "method",
              "name": "handleRemoveClick",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "description": "Emitido quando o botão de remoção do _chip_ `removable` é acionado.",
              "name": "cps-remove",
              "reactName": "onCpsRemove"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'neutral' | 'informative' | 'warning' | 'critical' | 'success'"
              },
              "default": "'neutral'",
              "description": "A variante visual para apresentação do _chip_.",
              "fieldName": "variant"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do _chip_.",
              "fieldName": "size"
            },
            {
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Marca o _chip_ como removível, exibindo-se um botão de remoção junto ao conteúdo interno.",
              "fieldName": "removable"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "_Chips_ são usados como etiquetas para organizar coisas ou para indicar uma seleção.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/tag",
          "status": "stable",
          "since": "0.2",
          "dependencies": [
            "cps-icon-button"
          ],
          "tagName": "cps-chip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsChip",
            "module": "components/chip.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-chip",
          "declaration": {
            "name": "CpsChip",
            "module": "components/chip.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsChip",
          "declaration": {
            "name": "CpsChip",
            "module": "components/chip.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon-button.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsIconButton",
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (que pode ser `<button>` ou `<a>`).",
              "name": "base"
            },
            {
              "description": "O ícone do botão (um `<cps-icon>`).",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "button",
              "type": {
                "text": "HTMLButtonElement | HTMLLinkElement"
              }
            },
            {
              "kind": "field",
              "name": "isFocused",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Descrição alternativa para ferramentas de acessibilidade. Não omita este atributo,\r\npois botões são elementos de interação e, desta forma, precisam ser lidos apropriadamente\r\npor ferramentas de acessibilidade.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome do ícone a renderizar. Os nomes disponíveis dependem da biblioteca de ícones que está sendo utilizada.",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "library",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome da biblioteca previamente registrada, a ser utilizada para carregar este ícone,\r\natravés de seu `name`. Se omitido, a biblioteca `default` é utilizada.",
              "attribute": "library"
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "URL de um arquivo SVG externo a carregar como ícone. Tenha certeza de confiar no conteúdo do arquivo que está\r\nincorporando, uma vez que seu código interno será executado pelo navegador, o que pode proporcionar ataques XSS\r\nse for carregado um arquivo malicioso.",
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Quando definido, o botão será renderizado como um elemento `<a>` com este `href` definido, ao invés de um elemento `<button>`.",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "'_blank' | '_parent' | '_self' | '_top'"
              },
              "description": "Informa o navegador qual o alvo de abertura do _link_. Usado somente se `href` estiver presente.",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "'noreferrer noopener'",
              "description": "Quando usando `href`, este atributo irá mapear o valor do atributo `rel` subjacente com o valor\r\npadrão `noreferrer noopener`, por questões de segurança. No entanto, se você estiver usando `target`\r\npara apontar para uma guia/janela específica, isso impedirá que ele funcione corretamente.\r\nPara este cenário específico, defina como vazio ou altere o valor de `rel` para outro valor.",
              "attribute": "rel"
            },
            {
              "kind": "field",
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "description": "Informa o navegador para baixar o arquivo vinculado, com o nome definido aqui. Usado somente se `href` estiver presente.",
              "attribute": "download"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "click",
              "description": "Simula um _click_ no botão."
            },
            {
              "kind": "method",
              "name": "focus",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  }
                }
              ],
              "description": "Coloca o foco no botão."
            },
            {
              "kind": "method",
              "name": "blur",
              "description": "Remove o foco do botão."
            }
          ],
          "events": [
            {
              "description": "Emitido quando o botão perde o foco.",
              "name": "cps-blur",
              "reactName": "onCpsBlur"
            },
            {
              "description": "Emitido quando o botão obtém o foco.",
              "name": "cps-focus",
              "reactName": "onCpsFocus"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "'small' | 'medium' | 'large'"
              },
              "default": "'medium'",
              "description": "O tamanho do botão.",
              "fieldName": "size"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Descrição alternativa para ferramentas de acessibilidade. Não omita este atributo,\r\npois botões são elementos de interação e, desta forma, precisam ser lidos apropriadamente\r\npor ferramentas de acessibilidade.",
              "fieldName": "label"
            },
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome do ícone a renderizar. Os nomes disponíveis dependem da biblioteca de ícones que está sendo utilizada.",
              "fieldName": "name"
            },
            {
              "name": "library",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome da biblioteca previamente registrada, a ser utilizada para carregar este ícone,\r\natravés de seu `name`. Se omitido, a biblioteca `default` é utilizada.",
              "fieldName": "library"
            },
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "URL de um arquivo SVG externo a carregar como ícone. Tenha certeza de confiar no conteúdo do arquivo que está\r\nincorporando, uma vez que seu código interno será executado pelo navegador, o que pode proporcionar ataques XSS\r\nse for carregado um arquivo malicioso.",
              "fieldName": "src"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Quando definido, o botão será renderizado como um elemento `<a>` com este `href` definido, ao invés de um elemento `<button>`.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "type": {
                "text": "'_blank' | '_parent' | '_self' | '_top'"
              },
              "description": "Informa o navegador qual o alvo de abertura do _link_. Usado somente se `href` estiver presente.",
              "fieldName": "target"
            },
            {
              "name": "rel",
              "type": {
                "text": "string"
              },
              "default": "'noreferrer noopener'",
              "description": "Quando usando `href`, este atributo irá mapear o valor do atributo `rel` subjacente com o valor\r\npadrão `noreferrer noopener`, por questões de segurança. No entanto, se você estiver usando `target`\r\npara apontar para uma guia/janela específica, isso impedirá que ele funcione corretamente.\r\nPara este cenário específico, defina como vazio ou altere o valor de `rel` para outro valor.",
              "fieldName": "rel"
            },
            {
              "name": "download",
              "type": {
                "text": "string | undefined"
              },
              "description": "Informa o navegador para baixar o arquivo vinculado, com o nome definido aqui. Usado somente se `href` estiver presente.",
              "fieldName": "download"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Desabilita o botão.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "Botões de ícone são simples, apenas um ícone dentro,\r\nnormalmente para uso dentro de outros componentes.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/icon-button",
          "status": "stable",
          "since": "0.2",
          "dependencies": [
            "cps-icon"
          ],
          "tagName": "cps-icon-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsIconButton",
            "module": "components/icon-button.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-icon-button",
          "declaration": {
            "name": "CpsIconButton",
            "module": "components/icon-button.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsIconButton",
          "declaration": {
            "name": "CpsIconButton",
            "module": "components/icon-button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsIcon",
          "cssParts": [
            {
              "description": "O elemento SVG renderizado.",
              "name": "svg"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "svg",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome do ícone a renderizar. Os nomes disponíveis dependem da biblioteca de ícones que está sendo utilizada.",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "URL de um arquivo SVG externo a carregar como ícone. Tenha certeza de confiar no conteúdo do arquivo que está\r\nincorporando, uma vez que seu código interno será executado pelo navegador, o que pode proporcionar ataques XSS\r\nse for carregado um arquivo malicioso.",
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Descrição alternativa para ferramentas de acessibilidade.\r\nSe omitido, será um ícone puramente visual, ignorado por tecnologias assistivas.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "library",
              "type": {
                "text": "string"
              },
              "default": "'default'",
              "description": "Nome da biblioteca previamente registrada, a ser utilizada para carregar este ícone,\r\natravés de seu `name`. Se omitido, a biblioteca `default` é utilizada.",
              "attribute": "library",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "getUrl",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleLabelChange"
            },
            {
              "kind": "method",
              "name": "setIcon"
            }
          ],
          "events": [
            {
              "description": "Emitido quando o ícone foi carregado.",
              "name": "cps-load",
              "reactName": "onCpsLoad"
            },
            {
              "description": "Emitido quando o ícone falha para carregar devido a um erro.",
              "name": "cps-error",
              "reactName": "onCpsError"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Nome do ícone a renderizar. Os nomes disponíveis dependem da biblioteca de ícones que está sendo utilizada.",
              "fieldName": "name"
            },
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "URL de um arquivo SVG externo a carregar como ícone. Tenha certeza de confiar no conteúdo do arquivo que está\r\nincorporando, uma vez que seu código interno será executado pelo navegador, o que pode proporcionar ataques XSS\r\nse for carregado um arquivo malicioso.",
              "fieldName": "src"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Descrição alternativa para ferramentas de acessibilidade.\r\nSe omitido, será um ícone puramente visual, ignorado por tecnologias assistivas.",
              "fieldName": "label"
            },
            {
              "name": "library",
              "type": {
                "text": "string"
              },
              "default": "'default'",
              "description": "Nome da biblioteca previamente registrada, a ser utilizada para carregar este ícone,\r\natravés de seu `name`. Se omitido, a biblioteca `default` é utilizada.",
              "fieldName": "library"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "Ícones são símbolos gráficos para representação de ações ou informações em uma interface.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/icon",
          "status": "stable",
          "since": "0.1",
          "tagName": "cps-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsIcon",
            "module": "components/icon.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-icon",
          "declaration": {
            "name": "CpsIcon",
            "module": "components/icon.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsIcon",
          "declaration": {
            "name": "CpsIcon",
            "module": "components/icon.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/include.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsInclude",
          "members": [
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string"
              },
              "description": "A localização do arquivo HTML a ser incluído. Tenha certeza de que pode confiar no conteúdo\r\nque você está incluindo, já que será executado como código no navegador após o carregamento,\r\no que implica em possíveis ataques XSS.",
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "'cors' | 'no-cors' | 'same-origin'"
              },
              "default": "'cors'",
              "description": "O modo _cross origin_ a ser utilizado para o carregamento do arquivo.",
              "attribute": "mode"
            },
            {
              "kind": "field",
              "name": "allowScripts",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Permite que _scripts_ incluídos no HTML importado sejam executados. Tenha certeza de que pode\r\nconfiar no conteúdo que você está incluindo, já que será executado como código no navegador\r\napós o carregamento, o que implica em possíveis ataques XSS.",
              "attribute": "allow-scripts"
            },
            {
              "kind": "method",
              "name": "executeScript",
              "privacy": "private",
              "parameters": [
                {
                  "name": "script",
                  "type": {
                    "text": "HTMLScriptElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSrcChange"
            }
          ],
          "events": [
            {
              "description": "Emitido quando o arquivo incluído foi carregado.",
              "name": "cps-load",
              "reactName": "onCpsLoad"
            },
            {
              "type": {
                "text": "{ status: number }"
              },
              "description": "Emitido quando o arquivo incluído falha durante o carregamento.",
              "name": "cps-error",
              "reactName": "onCpsError"
            }
          ],
          "attributes": [
            {
              "name": "src",
              "type": {
                "text": "string"
              },
              "description": "A localização do arquivo HTML a ser incluído. Tenha certeza de que pode confiar no conteúdo\r\nque você está incluindo, já que será executado como código no navegador após o carregamento,\r\no que implica em possíveis ataques XSS.",
              "fieldName": "src"
            },
            {
              "name": "mode",
              "type": {
                "text": "'cors' | 'no-cors' | 'same-origin'"
              },
              "default": "'cors'",
              "description": "O modo _cross origin_ a ser utilizado para o carregamento do arquivo.",
              "fieldName": "mode"
            },
            {
              "name": "allow-scripts",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Permite que _scripts_ incluídos no HTML importado sejam executados. Tenha certeza de que pode\r\nconfiar no conteúdo que você está incluindo, já que será executado como código no navegador\r\napós o carregamento, o que implica em possíveis ataques XSS.",
              "fieldName": "allowScripts"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "Possibilita a inclusão de arquivos HTML externos diretamente no conteúdo da página.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/include",
          "status": "stable",
          "since": "0.1",
          "tagName": "cps-include",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsInclude",
            "module": "components/include.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-include",
          "declaration": {
            "name": "CpsInclude",
            "module": "components/include.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsInclude",
          "declaration": {
            "name": "CpsInclude",
            "module": "components/include.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/skeleton.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsSkeleton",
          "cssProperties": [
            {
              "description": "A cor base do indicador.",
              "name": "--color"
            },
            {
              "description": "A cor de destaque (ou brilho) a ser usada como efeito de carregamento.",
              "name": "--accent-color"
            }
          ],
          "cssParts": [
            {
              "description": "O elemento principal que sustenta o indicador (um `<div>`).",
              "name": "base"
            },
            {
              "description": "O elemento que representa o indicador em si, o qual recebe cor e animação.",
              "name": "indicator"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "effect",
              "type": {
                "text": "'sheen' | 'pulse' | 'none'"
              },
              "default": "'sheen'",
              "description": "Determina o efeito visual de carregamento do indicador.",
              "attribute": "effect"
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full' | 'none'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos, com o padrão sendo bordas arredondas em `4px`.",
              "attribute": "rounded",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "effect",
              "type": {
                "text": "'sheen' | 'pulse' | 'none'"
              },
              "default": "'sheen'",
              "description": "Determina o efeito visual de carregamento do indicador.",
              "fieldName": "effect"
            },
            {
              "name": "rounded",
              "type": {
                "text": "'default' | 'corner' | 'full' | 'none'"
              },
              "default": "'default'",
              "description": "Arredondamento dos cantos, com o padrão sendo bordas arredondas em `4px`.",
              "fieldName": "rounded"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "Indicador usado para apresentação visual de conteúdo que potencialmente ainda será exibido.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/skeleton",
          "status": "stable",
          "since": "0.2",
          "tagName": "cps-skeleton",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsSkeleton",
            "module": "components/skeleton.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-skeleton",
          "declaration": {
            "name": "CpsSkeleton",
            "module": "components/skeleton.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsSkeleton",
          "declaration": {
            "name": "CpsSkeleton",
            "module": "components/skeleton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/spinner.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CpsSpinner",
          "cssProperties": [
            {
              "description": "A espessura da linha de apresentação do indicador.",
              "name": "--track-width"
            },
            {
              "description": "A cor da linha de caminho ao fundo do _spinner_.",
              "name": "--track-color"
            },
            {
              "description": "A cor do indicador giratório do _spinner_.",
              "name": "--indicator-color"
            },
            {
              "description": "O tempo que leva para o indicador completa um ciclo de animação giratório.",
              "name": "--speed"
            }
          ],
          "cssParts": [
            {
              "description": "O elemento principal propriamente dito (um `<svg>`).",
              "name": "base"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "localize",
              "privacy": "private",
              "default": "new LocalizeController(this)"
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/base-element"
          },
          "summary": "_Spinners_ são usados para exibir o andamento de uma operação de tempo indeterminado.",
          "documentation": "https://cpsrepositorio.github.io/cps-elements/#/componentes/spinner",
          "status": "stable",
          "since": "0.1",
          "tagName": "cps-spinner",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "CpsSpinner",
            "module": "components/spinner.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "cps-spinner",
          "declaration": {
            "name": "CpsSpinner",
            "module": "components/spinner.js"
          }
        },
        {
          "kind": "js",
          "name": "CpsSpinner",
          "declaration": {
            "name": "CpsSpinner",
            "module": "components/spinner.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon/library.default.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "library",
          "type": {
            "text": "IconLibrary"
          },
          "default": "{\r\n  name: 'default',\r\n  resolver: name => getBasePath(`assets/icons/${name}.svg`)\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "library",
            "module": "components/icon/library.default.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon/library.system.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "systemLibrary",
          "type": {
            "text": "IconLibrary"
          },
          "default": "{\r\n  name: 'system',\r\n  resolver: (name: keyof typeof icons) => {\r\n    if (name in icons) {\r\n      return `data:image/svg+xml,${encodeURIComponent(icons[name])}`;\r\n    }\r\n    return '';\r\n  }\r\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "systemLibrary",
            "module": "components/icon/library.system.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon/library.js",
      "declarations": [
        {
          "kind": "function",
          "name": "watchIcon",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "CpsIcon"
              }
            }
          ],
          "description": "Adds an icon to the list of watched icons."
        },
        {
          "kind": "function",
          "name": "unwatchIcon",
          "parameters": [
            {
              "name": "icon",
              "type": {
                "text": "CpsIcon"
              }
            }
          ],
          "description": "Removes an icon from the list of watched icons."
        },
        {
          "kind": "function",
          "name": "getIconLibrary",
          "parameters": [
            {
              "name": "name",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Returns a library from the registry."
        },
        {
          "kind": "function",
          "name": "registerIconLibrary",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "text": "{ resolver: IconLibraryResolver; mutator?: IconLibraryMutator }"
              }
            }
          ],
          "description": "Adds an icon library to the registry, or overrides an existing one."
        },
        {
          "kind": "function",
          "name": "unregisterIconLibrary",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Removes an icon library from the registry."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "watchIcon",
          "declaration": {
            "name": "watchIcon",
            "module": "components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "unwatchIcon",
          "declaration": {
            "name": "unwatchIcon",
            "module": "components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "getIconLibrary",
          "declaration": {
            "name": "getIconLibrary",
            "module": "components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "registerIconLibrary",
          "declaration": {
            "name": "registerIconLibrary",
            "module": "components/icon/library.js"
          }
        },
        {
          "kind": "js",
          "name": "unregisterIconLibrary",
          "declaration": {
            "name": "unregisterIconLibrary",
            "module": "components/icon/library.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/icon/request.js",
      "declarations": [
        {
          "kind": "function",
          "name": "requestIcon",
          "return": {
            "type": {
              "text": "Promise<IconFile>"
            }
          },
          "parameters": [
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestIcon",
          "declaration": {
            "name": "requestIcon",
            "module": "components/icon/request.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "components/include/request.js",
      "declarations": [
        {
          "kind": "function",
          "name": "requestInclude",
          "return": {
            "type": {
              "text": "Promise<IncludeFile>"
            }
          },
          "parameters": [
            {
              "name": "src",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "mode",
              "default": "'cors'",
              "type": {
                "text": "'cors' | 'no-cors' | 'same-origin'"
              }
            }
          ],
          "description": "Fetches an include file from a remote source. Caching is enabled so the origin is only pinged once."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "requestInclude",
          "declaration": {
            "name": "requestInclude",
            "module": "components/include/request.js"
          }
        }
      ]
    }
  ],
  "package": {
    "name": "@cps-elements/web",
    "description": "Web Components de ponta, sem complicação.",
    "version": "0.2.0",
    "author": "Erick Eduardo Petrucelli <erickpetru@gmail.com>",
    "homepage": "https://github.com/cpsrepositorio/cps-elements",
    "license": "MIT"
  }
}
